#! /bin/bash
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/bash}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by GNU coreutils $as_me 8.24, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" Makefile po/Makefile.in gnulib-tests/Makefile"
config_headers=" lib/config.h:lib/config.hin"
config_links=" GNUmakefile:GNUmakefile"
config_commands=" depfiles po-directories"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Configuration commands:
$config_commands

Report bugs to <bug-coreutils@gnu.org>.
GNU coreutils home page: <http://www.gnu.org/software/coreutils/>.
General help using GNU software: <http://www.gnu.org/gethelp/>."

ac_cs_config=""
ac_cs_version="\
GNU coreutils config.status 8.24
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/usr/bin/mkdir -p'
AWK='mawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/bash './configure'  $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/bash $*" >&6
  CONFIG_SHELL='/bin/bash'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="build-aux"
GNUmakefile=GNUmakefile
# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS. But hide it
    # from automake < 1.5.
    eval 'OBSOLETE_ALL_LINGUAS''=""'
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="%UNSET%"



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "lib/config.h") CONFIG_HEADERS="$CONFIG_HEADERS lib/config.h:lib/config.hin" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "$GNUmakefile") CONFIG_LINKS="$CONFIG_LINKS $GNUmakefile:$GNUmakefile" ;;
    "po-directories") CONFIG_COMMANDS="$CONFIG_COMMANDS po-directories" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "po/Makefile.in") CONFIG_FILES="$CONFIG_FILES po/Makefile.in" ;;
    "gnulib-tests/Makefile") CONFIG_FILES="$CONFIG_FILES gnulib-tests/Makefile" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_LINKS+set}" = set || CONFIG_LINKS=$config_links
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["gltests_LTLIBOBJS"]=" ioctl.lo strerror_r.lo"
S["gltests_LIBOBJS"]=" ioctl.o strerror_r.o"
S["gl_LTLIBOBJS"]=" lib/asnprintf.lo lib/asprintf.lo lib/chdir-long.lo lib/fclose.lo lib/fcntl.lo lib/fflush.lo lib/fpurge.lo lib/freadahead.lo lib/freadptr.lo lib/fse"\
"ek.lo lib/fseeko.lo lib/fseterr.lo lib/fsusage.lo lib/fts.lo lib/futimens.lo lib/getpass.lo lib/isapipe.lo lib/mountlist.lo lib/nanosleep.lo lib/obs"\
"tack.lo lib/openat-proc.lo lib/printf-args.lo lib/printf-parse.lo lib/readutmp.lo lib/selinux-at.lo lib/sig2str.lo lib/utimensat.lo lib/vasnprintf.l"\
"o lib/vasprintf.lo lib/vfprintf.lo lib/vprintf.lo"
S["gl_LIBOBJS"]=" lib/asnprintf.o lib/asprintf.o lib/chdir-long.o lib/fclose.o lib/fcntl.o lib/fflush.o lib/fpurge.o lib/freadahead.o lib/freadptr.o lib/fseek.o lib/"\
"fseeko.o lib/fseterr.o lib/fsusage.o lib/fts.o lib/futimens.o lib/getpass.o lib/isapipe.o lib/mountlist.o lib/nanosleep.o lib/obstack.o lib/openat-p"\
"roc.o lib/printf-args.o lib/printf-parse.o lib/readutmp.o lib/selinux-at.o lib/sig2str.o lib/utimensat.o lib/vasnprintf.o lib/vasprintf.o lib/vfprin"\
"tf.o lib/vprintf.o"
S["CONFIG_INCLUDE"]="lib/config.h"
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["POSUB"]="po"
S["INTLLIBS"]=""
S["XGETTEXT_EXTRA_OPTIONS"]=" --flag=error:3:c-format --flag=error_at_line:5:c-format --keyword='proper_name:1,\"This is a proper name. See the gettext manual, section Names.\"' -"\
"-keyword='proper_name_utf8:1,\"This is a proper name. See the gettext manual, section Names.\"' --flag=asprintf:2:c-format --flag=vasprintf:2:c-format"\
" --flag=verror:3:c-format --flag=verror_at_line:5:c-format --flag=xprintf:1:c-format --flag=xvprintf:1:c-format --flag=xfprintf:2:c-format --flag=xv"\
"fprintf:2:c-format --flag=xasprintf:1:c-format"
S["MSGMERGE"]=":"
S["XGETTEXT_015"]=":"
S["XGETTEXT"]=":"
S["GMSGFMT_015"]=":"
S["MSGFMT_015"]=":"
S["GMSGFMT"]=":"
S["MSGFMT"]=":"
S["GETTEXT_MACRO_VERSION"]="0.19"
S["USE_NLS"]="yes"
S["CROSS_COMPILING_FALSE"]=""
S["CROSS_COMPILING_TRUE"]="#"
S["built_programs"]="chroot hostid nice who users pinky uptime stty df stdbuf [ base64 basename cat chcon chgrp chmod chown cksum comm cp csplit cut date dd dir dircolor"\
"s dirname du echo env expand expr factor false fmt fold ginstall groups head id join kill link ln logname ls md5sum mkdir mkfifo mknod mktemp mv nl "\
"nproc nohup numfmt od paste pathchk pr printenv printf ptx pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum sha256sum sha384sum sha512sum"\
" shred shuf sleep sort split stat sum sync tac tail tee test timeout touch tr true truncate tsort tty uname unexpand uniq unlink vdir wc whoami yes"
S["EXTRA_MANS"]="man/arch.1 man/coreutils.1 man/hostname.1"
S["man1_MANS"]="man/chroot.1 man/hostid.1 man/nice.1 man/who.1 man/users.1 man/pinky.1 man/uptime.1 man/stty.1 man/df.1 man/stdbuf.1 man/base64.1 man/basename.1 man"\
"/cat.1 man/chcon.1 man/chgrp.1 man/chmod.1 man/chown.1 man/cksum.1 man/comm.1 man/cp.1 man/csplit.1 man/cut.1 man/date.1 man/dd.1 man/dir.1 man/dirc"\
"olors.1 man/dirname.1 man/du.1 man/echo.1 man/env.1 man/expand.1 man/expr.1 man/factor.1 man/false.1 man/fmt.1 man/fold.1 man/install.1 man/groups.1"\
" man/head.1 man/id.1 man/join.1 man/kill.1 man/link.1 man/ln.1 man/logname.1 man/ls.1 man/md5sum.1 man/mkdir.1 man/mkfifo.1 man/mknod.1 man/mktemp.1"\
" man/mv.1 man/nl.1 man/nproc.1 man/nohup.1 man/numfmt.1 man/od.1 man/paste.1 man/pathchk.1 man/pr.1 man/printenv.1 man/printf.1 man/ptx.1 man/pwd.1 "\
"man/readlink.1 man/realpath.1 man/rm.1 man/rmdir.1 man/runcon.1 man/seq.1 man/sha1sum.1 man/sha224sum.1 man/sha256sum.1 man/sha384sum.1 man/sha512su"\
"m.1 man/shred.1 man/shuf.1 man/sleep.1 man/sort.1 man/split.1 man/stat.1 man/sum.1 man/sync.1 man/tac.1 man/tail.1 man/tee.1 man/test.1 man/timeout."\
"1 man/touch.1 man/tr.1 man/true.1 man/truncate.1 man/tsort.1 man/tty.1 man/uname.1 man/unexpand.1 man/uniq.1 man/unlink.1 man/vdir.1 man/wc.1 man/wh"\
"oami.1 man/yes.1"
S["pkglibexec_PROGRAMS"]="src/libstdbuf.so"
S["bin_PROGRAMS"]="src/chroot$(EXEEXT) src/hostid$(EXEEXT) src/nice$(EXEEXT) src/who$(EXEEXT) src/users$(EXEEXT) src/pinky$(EXEEXT) src/uptime$(EXEEXT) src/stty$(EXEEX"\
"T) src/df$(EXEEXT) src/stdbuf$(EXEEXT) src/[$(EXEEXT) src/base64$(EXEEXT) src/basename$(EXEEXT) src/cat$(EXEEXT) src/chcon$(EXEEXT) src/chgrp$(EXEEX"\
"T) src/chmod$(EXEEXT) src/chown$(EXEEXT) src/cksum$(EXEEXT) src/comm$(EXEEXT) src/cp$(EXEEXT) src/csplit$(EXEEXT) src/cut$(EXEEXT) src/date$(EXEEXT)"\
" src/dd$(EXEEXT) src/dir$(EXEEXT) src/dircolors$(EXEEXT) src/dirname$(EXEEXT) src/du$(EXEEXT) src/echo$(EXEEXT) src/env$(EXEEXT) src/expand$(EXEEXT)"\
" src/expr$(EXEEXT) src/factor$(EXEEXT) src/false$(EXEEXT) src/fmt$(EXEEXT) src/fold$(EXEEXT) src/ginstall$(EXEEXT) src/groups$(EXEEXT) src/head$(EXE"\
"EXT) src/id$(EXEEXT) src/join$(EXEEXT) src/kill$(EXEEXT) src/link$(EXEEXT) src/ln$(EXEEXT) src/logname$(EXEEXT) src/ls$(EXEEXT) src/md5sum$(EXEEXT) "\
"src/mkdir$(EXEEXT) src/mkfifo$(EXEEXT) src/mknod$(EXEEXT) src/mktemp$(EXEEXT) src/mv$(EXEEXT) src/nl$(EXEEXT) src/nproc$(EXEEXT) src/nohup$(EXEEXT) "\
"src/numfmt$(EXEEXT) src/od$(EXEEXT) src/paste$(EXEEXT) src/pathchk$(EXEEXT) src/pr$(EXEEXT) src/printenv$(EXEEXT) src/printf$(EXEEXT) src/ptx$(EXEEX"\
"T) src/pwd$(EXEEXT) src/readlink$(EXEEXT) src/realpath$(EXEEXT) src/rm$(EXEEXT) src/rmdir$(EXEEXT) src/runcon$(EXEEXT) src/seq$(EXEEXT) src/sha1sum$"\
"(EXEEXT) src/sha224sum$(EXEEXT) src/sha256sum$(EXEEXT) src/sha384sum$(EXEEXT) src/sha512sum$(EXEEXT) src/shred$(EXEEXT) src/shuf$(EXEEXT) src/sleep$"\
"(EXEEXT) src/sort$(EXEEXT) src/split$(EXEEXT) src/stat$(EXEEXT) src/sum$(EXEEXT) src/sync$(EXEEXT) src/tac$(EXEEXT) src/tail$(EXEEXT) src/tee$(EXEEX"\
"T) src/test$(EXEEXT) src/timeout$(EXEEXT) src/touch$(EXEEXT) src/tr$(EXEEXT) src/true$(EXEEXT) src/truncate$(EXEEXT) src/tsort$(EXEEXT) src/tty$(EXE"\
"EXT) src/uname$(EXEEXT) src/unexpand$(EXEEXT) src/uniq$(EXEEXT) src/unlink$(EXEEXT) src/vdir$(EXEEXT) src/wc$(EXEEXT) src/whoami$(EXEEXT) src/yes$(E"\
"XEEXT)"
S["single_binary_install_type"]=""
S["single_binary_deps"]=""
S["single_binary_libs"]=""
S["single_binary_progs"]=""
S["LIB_GMP"]=""
S["LIB_NVPAIR"]=""
S["SINGLE_BINARY_FALSE"]=""
S["SINGLE_BINARY_TRUE"]="#"
S["GNULIB_TEST_WARN_CFLAGS"]=""
S["GNULIB_WARN_CFLAGS"]=""
S["WARN_CFLAGS"]=""
S["WERROR_CFLAGS"]=""
S["HAVE_PERL_FALSE"]="#"
S["HAVE_PERL_TRUE"]=""
S["SEQ_LIBM"]=""
S["LIB_CAP"]="-lcap"
S["LIB_XATTR"]="-lattr"
S["MAN"]=""
S["HELP2MAN"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/missing help2man"
S["LIBTESTS_LIBDEPS"]=""
S["LIBCOREUTILS_LTLIBDEPS"]=" "
S["LIBCOREUTILS_LIBDEPS"]=" "
S["YIELD_LIB"]="-lrt"
S["abs_aux_dir"]="/home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux"
S["INTL_MACOSX_LIBS"]=""
S["INET_PTON_LIB"]=""
S["LOCALE_TR_UTF8"]="none"
S["gltests_WITNESS"]="IN_COREUTILS_GNULIB_TESTS"
S["NEXT_AS_FIRST_DIRECTIVE_WCHAR_H"]="<wchar.h>"
S["NEXT_WCHAR_H"]="<wchar.h>"
S["LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_FALSE"]="#"
S["LIBUNISTRING_COMPILE_UNIWIDTH_WIDTH_TRUE"]=""
S["LIBUNISTRING_UNIWIDTH_H"]="lib/uniwidth.h"
S["LIBUNISTRING_UNITYPES_H"]="lib/unitypes.h"
S["LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_FALSE"]="#"
S["LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB_TRUE"]=""
S["LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_FALSE"]="#"
S["LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR_TRUE"]=""
S["LIBUNISTRING_UNISTR_H"]="lib/unistr.h"
S["HAVE_UNISTD_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_UNISTD_H"]="<unistd.h>"
S["NEXT_UNISTD_H"]="<unistd.h>"
S["LIB_TIMER_TIME"]="-lrt -pthread"
S["UNISTD_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["PTHREAD_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["SYS_TIME_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["TIME_H_DEFINES_STRUCT_TIMESPEC"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_TIME_H"]="<time.h>"
S["NEXT_TIME_H"]="<time.h>"
S["NEXT_AS_FIRST_DIRECTIVE_TERMIOS_H"]="<termios.h>"
S["NEXT_TERMIOS_H"]="<termios.h>"
S["HAVE_TERMIOS_H"]="1"
S["HAVE_DECL_TCGETSID"]="1"
S["GNULIB_TCGETSID"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_WAIT_H"]="<sys/wait.h>"
S["NEXT_SYS_WAIT_H"]="<sys/wait.h>"
S["GNULIB_WAITPID"]="0"
S["HAVE_SYS_UTSNAME_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_UTSNAME_H"]="<sys/utsname.h>"
S["NEXT_SYS_UTSNAME_H"]="<sys/utsname.h>"
S["HAVE_STRUCT_UTSNAME"]="1"
S["HAVE_UNAME"]="1"
S["GNULIB_UNAME"]="1"
S["HAVE_SYS_UIO_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H"]="<sys/uio.h>"
S["NEXT_SYS_UIO_H"]="<sys/uio.h>"
S["HAVE_SYS_RESOURCE_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_RESOURCE_H"]="<sys/resource.h>"
S["NEXT_SYS_RESOURCE_H"]="<sys/resource.h>"
S["HAVE_GETRUSAGE"]="1"
S["GNULIB_GETRUSAGE"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_IOCTL_H"]="<sys/ioctl.h>"
S["NEXT_SYS_IOCTL_H"]="<sys/ioctl.h>"
S["HAVE_SYS_IOCTL_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STRING_H"]="<string.h>"
S["NEXT_STRING_H"]="<string.h>"
S["NEXT_AS_FIRST_DIRECTIVE_STDLIB_H"]="<stdlib.h>"
S["NEXT_STDLIB_H"]="<stdlib.h>"
S["NEXT_AS_FIRST_DIRECTIVE_STDIO_H"]="<stdio.h>"
S["NEXT_STDIO_H"]="<stdio.h>"
S["GL_GENERATE_STDARG_H_FALSE"]=""
S["GL_GENERATE_STDARG_H_TRUE"]="#"
S["STDARG_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_STDARG_H"]=""
S["NEXT_STDARG_H"]="<stdarg.h>"
S["GL_GENERATE_STDALIGN_H_FALSE"]=""
S["GL_GENERATE_STDALIGN_H_TRUE"]="#"
S["STDALIGN_H"]=""
S["LIB_SMACK"]=""
S["NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H"]="<signal.h>"
S["NEXT_SIGNAL_H"]="<signal.h>"
S["GL_GENERATE_SELINUX_CONTEXT_H_FALSE"]="#"
S["GL_GENERATE_SELINUX_CONTEXT_H_TRUE"]=""
S["SELINUX_CONTEXT_H"]="lib/selinux/context.h"
S["NEXT_AS_FIRST_DIRECTIVE_SELINUX_SELINUX_H"]=""
S["NEXT_SELINUX_SELINUX_H"]=""
S["LIB_SELINUX"]=""
S["GL_GENERATE_SCHED_H_FALSE"]=""
S["GL_GENERATE_SCHED_H_TRUE"]="#"
S["SCHED_H"]=""
S["HAVE_STRUCT_SCHED_PARAM"]=""
S["HAVE_SCHED_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_SCHED_H"]=""
S["NEXT_SCHED_H"]=""
S["REPLACE_RAISE"]="0"
S["REPLACE_PTHREAD_SIGMASK"]="0"
S["HAVE_SIGHANDLER_T"]="1"
S["HAVE_TYPE_VOLATILE_SIG_ATOMIC_T"]="1"
S["HAVE_STRUCT_SIGACTION_SA_SIGACTION"]="1"
S["HAVE_SIGACTION"]="1"
S["HAVE_SIGINFO_T"]="1"
S["HAVE_SIGSET_T"]="1"
S["HAVE_RAISE"]="1"
S["HAVE_PTHREAD_SIGMASK"]="1"
S["HAVE_POSIX_SIGNALBLOCKING"]="1"
S["GNULIB_SIGACTION"]="1"
S["GNULIB_SIGPROCMASK"]="1"
S["GNULIB_SIGNAL_H_SIGPIPE"]="0"
S["GNULIB_RAISE"]="1"
S["GNULIB_PTHREAD_SIGMASK"]="0"
S["LIB_PTHREAD"]="-pthread"
S["GL_GENERATE_PTHREAD_H_FALSE"]=""
S["GL_GENERATE_PTHREAD_H_TRUE"]="#"
S["PTHREAD_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_PTHREAD_H"]="<pthread.h>"
S["NEXT_PTHREAD_H"]="<pthread.h>"
S["HAVE_PTHREAD_SPINLOCK_T"]="1"
S["HAVE_PTHREAD_T"]="1"
S["HAVE_PTHREAD_H"]="1"
S["DEFAULT_POSIX2_VERSION"]=""
S["PREFERABLY_POSIX_SHELL"]="/bin/bash"
S["POSIX_SHELL"]="/bin/bash"
S["PERL"]="perl"
S["YFLAGS"]=""
S["YACC"]="bison -y"
S["HAVE__BOOL"]="1"
S["GL_GENERATE_STDBOOL_H_FALSE"]=""
S["GL_GENERATE_STDBOOL_H_TRUE"]="#"
S["STDBOOL_H"]=""
S["GL_GENERATE_NETINET_IN_H_FALSE"]=""
S["GL_GENERATE_NETINET_IN_H_TRUE"]="#"
S["NETINET_IN_H"]=""
S["HAVE_NETINET_IN_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_NETINET_IN_H"]=""
S["NEXT_NETINET_IN_H"]=""
S["LIB_NANOSLEEP"]=""
S["LIB_SELECT"]=""
S["LIBSOCKET"]=""
S["HAVE_SYS_SELECT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H"]="<sys/select.h>"
S["NEXT_SYS_SELECT_H"]="<sys/select.h>"
S["REPLACE_SELECT"]="0"
S["REPLACE_PSELECT"]="0"
S["HAVE_PSELECT"]="1"
S["GNULIB_SELECT"]="1"
S["GNULIB_PSELECT"]="0"
S["REPLACE_LOCALTIME"]="0"
S["REPLACE_GMTIME"]="0"
S["REPLACE_TIMEGM"]="GNULIB_PORTCHECK"
S["REPLACE_NANOSLEEP"]="1"
S["REPLACE_MKTIME"]="0"
S["REPLACE_LOCALTIME_R"]="0"
S["HAVE_TIMEGM"]="1"
S["HAVE_STRPTIME"]="1"
S["HAVE_NANOSLEEP"]="1"
S["HAVE_DECL_LOCALTIME_R"]="1"
S["GNULIB_TIME_R"]="1"
S["GNULIB_TIMEGM"]="0"
S["GNULIB_STRPTIME"]="0"
S["GNULIB_NANOSLEEP"]="1"
S["GNULIB_MKTIME"]="1"
S["UNDEFINE_STRTOK_R"]="0"
S["REPLACE_STRTOK_R"]="0"
S["REPLACE_STRSIGNAL"]="0"
S["REPLACE_STRNLEN"]="0"
S["REPLACE_STRNDUP"]="0"
S["REPLACE_STRNCAT"]="0"
S["REPLACE_STRERROR_R"]="1"
S["REPLACE_STRERROR"]="0"
S["REPLACE_STRCHRNUL"]="0"
S["REPLACE_STRCASESTR"]="0"
S["REPLACE_STRSTR"]="0"
S["REPLACE_STRDUP"]="0"
S["REPLACE_STPNCPY"]="0"
S["REPLACE_MEMMEM"]="0"
S["REPLACE_MEMCHR"]="0"
S["HAVE_STRVERSCMP"]="1"
S["HAVE_DECL_STRSIGNAL"]="1"
S["HAVE_DECL_STRERROR_R"]="1"
S["HAVE_DECL_STRTOK_R"]="1"
S["HAVE_STRCASESTR"]="1"
S["HAVE_STRSEP"]="1"
S["HAVE_STRPBRK"]="1"
S["HAVE_DECL_STRNLEN"]="1"
S["HAVE_DECL_STRNDUP"]="1"
S["HAVE_DECL_STRDUP"]="1"
S["HAVE_STRCHRNUL"]="1"
S["HAVE_STPNCPY"]="1"
S["HAVE_STPCPY"]="1"
S["HAVE_RAWMEMCHR"]="1"
S["HAVE_DECL_MEMRCHR"]="1"
S["HAVE_MEMPCPY"]="1"
S["HAVE_DECL_MEMMEM"]="1"
S["HAVE_MEMCHR"]="1"
S["HAVE_FFSLL"]="1"
S["HAVE_FFSL"]="1"
S["HAVE_MBSLEN"]="0"
S["GNULIB_STRVERSCMP"]="0"
S["GNULIB_STRSIGNAL"]="1"
S["GNULIB_STRERROR_R"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_STRERROR"]="1"
S["GNULIB_MBSTOK_R"]="0"
S["GNULIB_MBSSEP"]="0"
S["GNULIB_MBSSPN"]="0"
S["GNULIB_MBSPBRK"]="0"
S["GNULIB_MBSCSPN"]="0"
S["GNULIB_MBSCASESTR"]="0"
S["GNULIB_MBSPCASECMP"]="0"
S["GNULIB_MBSNCASECMP"]="0"
S["GNULIB_MBSCASECMP"]="1"
S["GNULIB_MBSSTR"]="1"
S["GNULIB_MBSRCHR"]="0"
S["GNULIB_MBSCHR"]="0"
S["GNULIB_MBSNLEN"]="0"
S["GNULIB_MBSLEN"]="1"
S["GNULIB_STRTOK_R"]="0"
S["GNULIB_STRCASESTR"]="0"
S["GNULIB_STRSTR"]="1"
S["GNULIB_STRSEP"]="0"
S["GNULIB_STRPBRK"]="1"
S["GNULIB_STRNLEN"]="1"
S["GNULIB_STRNDUP"]="1"
S["GNULIB_STRNCAT"]="1"
S["GNULIB_STRDUP"]="1"
S["GNULIB_STRCHRNUL"]="0"
S["GNULIB_STPNCPY"]="1"
S["GNULIB_STPCPY"]="1"
S["GNULIB_RAWMEMCHR"]="0"
S["GNULIB_MEMRCHR"]="1"
S["GNULIB_MEMPCPY"]="1"
S["GNULIB_MEMMEM"]="0"
S["GNULIB_MEMCHR"]="1"
S["GNULIB_FFSLL"]="0"
S["GNULIB_FFSL"]="0"
S["LOCALE_FR_UTF8"]="none"
S["LOCALE_ZH_CN"]="none"
S["LOCALE_JA"]="none"
S["NEXT_AS_FIRST_DIRECTIVE_MATH_H"]="<math.h>"
S["NEXT_MATH_H"]="<math.h>"
S["SED"]="/usr/bin/sed"
S["LTLIBMULTITHREAD"]="-pthread"
S["LIBMULTITHREAD"]="-pthread"
S["LTLIBTHREAD"]=""
S["LIBTHREAD"]=""
S["LIBPTH_PREFIX"]=""
S["LTLIBPTH"]=""
S["LIBPTH"]=""
S["NEXT_AS_FIRST_DIRECTIVE_LOCALE_H"]="<locale.h>"
S["NEXT_LOCALE_H"]="<locale.h>"
S["HAVE_XLOCALE_H"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_STDDEF_H"]=""
S["NEXT_STDDEF_H"]=""
S["GL_GENERATE_STDDEF_H_FALSE"]=""
S["GL_GENERATE_STDDEF_H_TRUE"]="#"
S["STDDEF_H"]=""
S["HAVE_WCHAR_T"]="1"
S["HAVE_MAX_ALIGN_T"]="1"
S["REPLACE_NULL"]="0"
S["REPLACE_STRUCT_LCONV"]="0"
S["REPLACE_DUPLOCALE"]="0"
S["REPLACE_SETLOCALE"]="0"
S["REPLACE_LOCALECONV"]="0"
S["HAVE_DUPLOCALE"]="1"
S["GNULIB_DUPLOCALE"]="0"
S["GNULIB_SETLOCALE"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_LOCALECONV"]="1"
S["LOCALCHARSET_TESTS_ENVIRONMENT"]="CHARSETALIASDIR=\"$(abs_top_builddir)/lib\""
S["GLIBC21"]="yes"
S["IGNORE_UNUSED_LIBRARIES_CFLAGS"]="-Wl,--as-needed"
S["HAVE_LANGINFO_YESEXPR"]="1"
S["HAVE_LANGINFO_ERA"]="1"
S["HAVE_LANGINFO_T_FMT_AMPM"]="1"
S["HAVE_LANGINFO_CODESET"]="1"
S["HAVE_LANGINFO_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_LANGINFO_H"]="<langinfo.h>"
S["NEXT_LANGINFO_H"]="<langinfo.h>"
S["REPLACE_NL_LANGINFO"]="0"
S["HAVE_NL_LANGINFO"]="1"
S["GNULIB_NL_LANGINFO"]="1"
S["REPLACE_TOWLOWER"]="0"
S["REPLACE_ISWCNTRL"]="0"
S["HAVE_WCTYPE_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_WCTYPE_H"]="<wctype.h>"
S["NEXT_WCTYPE_H"]="<wctype.h>"
S["HAVE_WINT_T"]="1"
S["HAVE_ISWCNTRL"]="1"
S["REPLACE_ISWBLANK"]="0"
S["HAVE_WCTRANS_T"]="1"
S["HAVE_WCTYPE_T"]="1"
S["HAVE_ISWBLANK"]="1"
S["GNULIB_TOWCTRANS"]="0"
S["GNULIB_WCTRANS"]="0"
S["GNULIB_ISWCTYPE"]="0"
S["GNULIB_WCTYPE"]="0"
S["GNULIB_ISWBLANK"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H"]="<inttypes.h>"
S["NEXT_INTTYPES_H"]="<inttypes.h>"
S["UINT64_MAX_EQ_ULONG_MAX"]="1"
S["UINT32_MAX_LT_UINTMAX_MAX"]="1"
S["PRIPTR_PREFIX"]="\"l\""
S["PRI_MACROS_BROKEN"]="0"
S["INT64_MAX_EQ_LONG_MAX"]="1"
S["INT32_MAX_LT_INTMAX_MAX"]="1"
S["REPLACE_STRTOUMAX"]="0"
S["REPLACE_STRTOIMAX"]="0"
S["HAVE_DECL_STRTOUMAX"]="1"
S["HAVE_DECL_STRTOIMAX"]="1"
S["HAVE_DECL_IMAXDIV"]="1"
S["HAVE_DECL_IMAXABS"]="1"
S["GNULIB_STRTOUMAX"]="1"
S["GNULIB_STRTOIMAX"]="1"
S["GNULIB_IMAXDIV"]="0"
S["GNULIB_IMAXABS"]="0"
S["GL_GENERATE_STDINT_H_FALSE"]=""
S["GL_GENERATE_STDINT_H_TRUE"]="#"
S["STDINT_H"]=""
S["WINT_T_SUFFIX"]=""
S["WCHAR_T_SUFFIX"]=""
S["SIG_ATOMIC_T_SUFFIX"]=""
S["SIZE_T_SUFFIX"]=""
S["PTRDIFF_T_SUFFIX"]=""
S["HAVE_SIGNED_WINT_T"]=""
S["HAVE_SIGNED_WCHAR_T"]=""
S["HAVE_SIGNED_SIG_ATOMIC_T"]=""
S["BITSIZEOF_WINT_T"]=""
S["BITSIZEOF_WCHAR_T"]=""
S["BITSIZEOF_SIG_ATOMIC_T"]=""
S["BITSIZEOF_SIZE_T"]=""
S["BITSIZEOF_PTRDIFF_T"]=""
S["APPLE_UNIVERSAL_BUILD"]="0"
S["HAVE_SYS_BITYPES_H"]=""
S["HAVE_SYS_INTTYPES_H"]=""
S["HAVE_STDINT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STDINT_H"]="<stdint.h>"
S["NEXT_STDINT_H"]="<stdint.h>"
S["HAVE_SYS_TYPES_H"]="1"
S["HAVE_INTTYPES_H"]="1"
S["HAVE_WCHAR_H"]="1"
S["HAVE_UNSIGNED_LONG_LONG_INT"]="1"
S["HAVE_LONG_LONG_INT"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_ICONV_H"]="<iconv.h>"
S["NEXT_ICONV_H"]="<iconv.h>"
S["GL_GENERATE_ICONV_H_FALSE"]="#"
S["GL_GENERATE_ICONV_H_TRUE"]=""
S["ICONV_H"]="lib/iconv.h"
S["REPLACE_ICONV_UTF"]="0"
S["REPLACE_ICONV_OPEN"]="0"
S["REPLACE_ICONV"]="0"
S["ICONV_CONST"]=""
S["GNULIB_ICONV"]="1"
S["LTLIBICONV"]=""
S["LIBICONV"]=""
S["GNU_MAKE_FALSE"]="#"
S["GNU_MAKE_TRUE"]=""
S["NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H"]="<sys/time.h>"
S["NEXT_SYS_TIME_H"]="<sys/time.h>"
S["REPLACE_STRUCT_TIMEVAL"]="0"
S["REPLACE_GETTIMEOFDAY"]="0"
S["HAVE_SYS_TIME_H"]="1"
S["HAVE_STRUCT_TIMEVAL"]="1"
S["HAVE_GETTIMEOFDAY"]="1"
S["GNULIB_GETTIMEOFDAY"]="1"
S["LTLIBINTL"]=""
S["LIBINTL"]=""
S["GNULIB_GL_UNISTD_H_GETOPT"]=""
S["GETOPT_H"]=""
S["HAVE_GETOPT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_GETOPT_H"]="<getopt.h>"
S["NEXT_GETOPT_H"]="<getopt.h>"
S["GETLOADAVG_LIBS"]=""
S["LIB_GETHRXTIME"]=""
S["GETHOSTNAME_LIB"]=""
S["GETADDRINFO_LIB"]=""
S["INET_NTOP_LIB"]=""
S["SERVENT_LIB"]=""
S["HOSTENT_LIB"]=""
S["HAVE_NETDB_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_NETDB_H"]="<netdb.h>"
S["NEXT_NETDB_H"]="<netdb.h>"
S["REPLACE_GAI_STRERROR"]="0"
S["HAVE_DECL_GETNAMEINFO"]="1"
S["HAVE_DECL_GETADDRINFO"]="1"
S["HAVE_DECL_GAI_STRERROR"]="1"
S["HAVE_DECL_FREEADDRINFO"]="1"
S["HAVE_STRUCT_ADDRINFO"]="1"
S["GNULIB_GETADDRINFO"]="1"
S["HAVE_WS2TCPIP_H"]="0"
S["HAVE_SYS_SOCKET_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H"]="<sys/socket.h>"
S["NEXT_SYS_SOCKET_H"]="<sys/socket.h>"
S["HAVE_ACCEPT4"]="1"
S["HAVE_SA_FAMILY_T"]="1"
S["HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY"]="1"
S["HAVE_STRUCT_SOCKADDR_STORAGE"]="1"
S["GNULIB_ACCEPT4"]="0"
S["GNULIB_SHUTDOWN"]="0"
S["GNULIB_SETSOCKOPT"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_SENDTO"]="0"
S["GNULIB_RECVFROM"]="0"
S["GNULIB_SEND"]="0"
S["GNULIB_RECV"]="0"
S["GNULIB_LISTEN"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_GETSOCKOPT"]="0"
S["GNULIB_GETSOCKNAME"]="0"
S["GNULIB_GETPEERNAME"]="0"
S["GNULIB_BIND"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_ACCEPT"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_CONNECT"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_SOCKET"]="IN_COREUTILS_GNULIB_TESTS"
S["WINDOWS_64_BIT_ST_SIZE"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H"]="<sys/stat.h>"
S["NEXT_SYS_STAT_H"]="<sys/stat.h>"
S["WINDOWS_64_BIT_OFF_T"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H"]="<sys/types.h>"
S["NEXT_SYS_TYPES_H"]="<sys/types.h>"
S["HAVE_SAME_LONG_DOUBLE_AS_DOUBLE"]="0"
S["REPLACE_TRUNCL"]="0"
S["REPLACE_TRUNCF"]="0"
S["REPLACE_TRUNC"]="0"
S["REPLACE_SQRTL"]="0"
S["REPLACE_SIGNBIT_USING_GCC"]="1"
S["REPLACE_SIGNBIT"]="0"
S["REPLACE_ROUNDL"]="0"
S["REPLACE_ROUNDF"]="0"
S["REPLACE_ROUND"]="0"
S["REPLACE_REMAINDERL"]="0"
S["REPLACE_REMAINDERF"]="0"
S["REPLACE_REMAINDER"]="0"
S["REPLACE_NAN"]="0"
S["REPLACE_MODFL"]="0"
S["REPLACE_MODFF"]="0"
S["REPLACE_MODF"]="0"
S["REPLACE_LOGBL"]="0"
S["REPLACE_LOGBF"]="0"
S["REPLACE_LOGB"]="0"
S["REPLACE_LOG2L"]="0"
S["REPLACE_LOG2F"]="0"
S["REPLACE_LOG2"]="0"
S["REPLACE_LOG1PL"]="0"
S["REPLACE_LOG1PF"]="0"
S["REPLACE_LOG1P"]="0"
S["REPLACE_LOG10L"]="0"
S["REPLACE_LOG10F"]="0"
S["REPLACE_LOG10"]="0"
S["REPLACE_LOGL"]="0"
S["REPLACE_LOGF"]="0"
S["REPLACE_LOG"]="0"
S["REPLACE_LDEXPL"]="0"
S["REPLACE_ISNAN"]="0"
S["REPLACE_ISINF"]="0"
S["REPLACE_ISFINITE"]="0"
S["REPLACE_ILOGBF"]="0"
S["REPLACE_ILOGB"]="0"
S["REPLACE_HYPOTL"]="0"
S["REPLACE_HYPOTF"]="0"
S["REPLACE_HYPOT"]="0"
S["REPLACE_HUGE_VAL"]="0"
S["REPLACE_FREXPL"]="0"
S["REPLACE_FREXP"]="0"
S["REPLACE_FREXPF"]="0"
S["REPLACE_FMODL"]="0"
S["REPLACE_FMODF"]="0"
S["REPLACE_FMOD"]="0"
S["REPLACE_FMAL"]="0"
S["REPLACE_FMAF"]="0"
S["REPLACE_FMA"]="0"
S["REPLACE_FLOORL"]="0"
S["REPLACE_FLOORF"]="0"
S["REPLACE_FLOOR"]="0"
S["REPLACE_FABSL"]="0"
S["REPLACE_EXP2L"]="0"
S["REPLACE_EXP2"]="0"
S["REPLACE_EXPM1F"]="0"
S["REPLACE_EXPM1"]="0"
S["REPLACE_CEILL"]="0"
S["REPLACE_CEILF"]="0"
S["REPLACE_CEIL"]="0"
S["REPLACE_CBRTL"]="0"
S["REPLACE_CBRTF"]="0"
S["HAVE_DECL_TRUNCL"]="1"
S["HAVE_DECL_TRUNCF"]="1"
S["HAVE_DECL_TRUNC"]="1"
S["HAVE_DECL_TANL"]="1"
S["HAVE_DECL_SQRTL"]="1"
S["HAVE_DECL_SINL"]="1"
S["HAVE_DECL_ROUNDL"]="1"
S["HAVE_DECL_ROUNDF"]="1"
S["HAVE_DECL_ROUND"]="1"
S["HAVE_DECL_RINTF"]="1"
S["HAVE_DECL_REMAINDERL"]="1"
S["HAVE_DECL_REMAINDER"]="1"
S["HAVE_DECL_LOGB"]="1"
S["HAVE_DECL_LOG2L"]="1"
S["HAVE_DECL_LOG2F"]="1"
S["HAVE_DECL_LOG2"]="1"
S["HAVE_DECL_LOG10L"]="1"
S["HAVE_DECL_LOGL"]="1"
S["HAVE_DECL_LDEXPL"]="1"
S["HAVE_DECL_FREXPL"]="1"
S["HAVE_DECL_FLOORL"]="1"
S["HAVE_DECL_FLOORF"]="1"
S["HAVE_DECL_EXPM1L"]="1"
S["HAVE_DECL_EXP2L"]="1"
S["HAVE_DECL_EXP2F"]="1"
S["HAVE_DECL_EXP2"]="1"
S["HAVE_DECL_EXPL"]="1"
S["HAVE_DECL_COSL"]="1"
S["HAVE_DECL_COPYSIGNF"]="1"
S["HAVE_DECL_CEILL"]="1"
S["HAVE_DECL_CEILF"]="1"
S["HAVE_DECL_CBRTL"]="1"
S["HAVE_DECL_CBRTF"]="1"
S["HAVE_DECL_ATANL"]="1"
S["HAVE_DECL_ASINL"]="1"
S["HAVE_DECL_ACOSL"]="1"
S["HAVE_TANHF"]="1"
S["HAVE_TANL"]="1"
S["HAVE_TANF"]="1"
S["HAVE_SQRTL"]="1"
S["HAVE_SQRTF"]="1"
S["HAVE_SINHF"]="1"
S["HAVE_SINL"]="1"
S["HAVE_SINF"]="1"
S["HAVE_RINTL"]="1"
S["HAVE_RINT"]="1"
S["HAVE_REMAINDERF"]="1"
S["HAVE_REMAINDER"]="1"
S["HAVE_POWF"]="1"
S["HAVE_MODFL"]="1"
S["HAVE_MODFF"]="1"
S["HAVE_LOGBL"]="1"
S["HAVE_LOGBF"]="1"
S["HAVE_LOG1PL"]="1"
S["HAVE_LOG1PF"]="1"
S["HAVE_LOG1P"]="1"
S["HAVE_LOG10L"]="1"
S["HAVE_LOG10F"]="1"
S["HAVE_LOGL"]="1"
S["HAVE_LOGF"]="1"
S["HAVE_LDEXPF"]="1"
S["HAVE_ISNANL"]="1"
S["HAVE_ISNAND"]="1"
S["HAVE_ISNANF"]="1"
S["HAVE_ILOGBL"]="1"
S["HAVE_ILOGBF"]="1"
S["HAVE_ILOGB"]="1"
S["HAVE_HYPOTL"]="1"
S["HAVE_HYPOTF"]="1"
S["HAVE_FREXPF"]="1"
S["HAVE_FMODL"]="1"
S["HAVE_FMODF"]="1"
S["HAVE_FMAL"]="1"
S["HAVE_FMAF"]="1"
S["HAVE_FMA"]="1"
S["HAVE_FABSL"]="1"
S["HAVE_FABSF"]="1"
S["HAVE_EXPM1F"]="1"
S["HAVE_EXPM1"]="1"
S["HAVE_EXPL"]="1"
S["HAVE_EXPF"]="1"
S["HAVE_COSHF"]="1"
S["HAVE_COSL"]="1"
S["HAVE_COSF"]="1"
S["HAVE_COPYSIGNL"]="1"
S["HAVE_COPYSIGN"]="1"
S["HAVE_CBRTL"]="1"
S["HAVE_CBRTF"]="1"
S["HAVE_CBRT"]="1"
S["HAVE_ATAN2F"]="1"
S["HAVE_ATANL"]="1"
S["HAVE_ATANF"]="1"
S["HAVE_ASINL"]="1"
S["HAVE_ASINF"]="1"
S["HAVE_ACOSL"]="1"
S["HAVE_ACOSF"]="1"
S["GNULIB_TRUNCL"]="0"
S["GNULIB_TRUNCF"]="0"
S["GNULIB_TRUNC"]="0"
S["GNULIB_TANHF"]="0"
S["GNULIB_TANL"]="0"
S["GNULIB_TANF"]="0"
S["GNULIB_SQRTL"]="0"
S["GNULIB_SQRTF"]="0"
S["GNULIB_SINHF"]="0"
S["GNULIB_SINL"]="0"
S["GNULIB_SINF"]="0"
S["GNULIB_SIGNBIT"]="1"
S["GNULIB_ROUNDL"]="0"
S["GNULIB_ROUNDF"]="0"
S["GNULIB_ROUND"]="0"
S["GNULIB_RINTL"]="0"
S["GNULIB_RINTF"]="0"
S["GNULIB_RINT"]="0"
S["GNULIB_REMAINDERL"]="0"
S["GNULIB_REMAINDERF"]="0"
S["GNULIB_REMAINDER"]="0"
S["GNULIB_POWF"]="0"
S["GNULIB_MODFL"]="0"
S["GNULIB_MODFF"]="0"
S["GNULIB_MODF"]="0"
S["GNULIB_LOGBL"]="0"
S["GNULIB_LOGBF"]="0"
S["GNULIB_LOGB"]="0"
S["GNULIB_LOG2L"]="0"
S["GNULIB_LOG2F"]="0"
S["GNULIB_LOG2"]="0"
S["GNULIB_LOG1PL"]="0"
S["GNULIB_LOG1PF"]="0"
S["GNULIB_LOG1P"]="0"
S["GNULIB_LOG10L"]="0"
S["GNULIB_LOG10F"]="0"
S["GNULIB_LOG10"]="0"
S["GNULIB_LOGL"]="0"
S["GNULIB_LOGF"]="0"
S["GNULIB_LOG"]="0"
S["GNULIB_LDEXPL"]="0"
S["GNULIB_LDEXPF"]="0"
S["GNULIB_ISNANL"]="0"
S["GNULIB_ISNAND"]="0"
S["GNULIB_ISNANF"]="0"
S["GNULIB_ISNAN"]="0"
S["GNULIB_ISINF"]="0"
S["GNULIB_ISFINITE"]="0"
S["GNULIB_ILOGBL"]="0"
S["GNULIB_ILOGBF"]="0"
S["GNULIB_ILOGB"]="0"
S["GNULIB_HYPOTL"]="0"
S["GNULIB_HYPOTF"]="0"
S["GNULIB_HYPOT"]="0"
S["GNULIB_FREXPL"]="1"
S["GNULIB_FREXP"]="1"
S["GNULIB_FREXPF"]="0"
S["GNULIB_FMODL"]="0"
S["GNULIB_FMODF"]="0"
S["GNULIB_FMOD"]="0"
S["GNULIB_FMAL"]="0"
S["GNULIB_FMAF"]="0"
S["GNULIB_FMA"]="0"
S["GNULIB_FLOORL"]="0"
S["GNULIB_FLOORF"]="0"
S["GNULIB_FLOOR"]="0"
S["GNULIB_FABSL"]="0"
S["GNULIB_FABSF"]="0"
S["GNULIB_EXPM1L"]="0"
S["GNULIB_EXPM1F"]="0"
S["GNULIB_EXPM1"]="0"
S["GNULIB_EXP2L"]="0"
S["GNULIB_EXP2F"]="0"
S["GNULIB_EXP2"]="0"
S["GNULIB_EXPL"]="0"
S["GNULIB_EXPF"]="0"
S["GNULIB_COSHF"]="0"
S["GNULIB_COSL"]="0"
S["GNULIB_COSF"]="0"
S["GNULIB_COPYSIGNL"]="0"
S["GNULIB_COPYSIGNF"]="0"
S["GNULIB_COPYSIGN"]="0"
S["GNULIB_CEILL"]="0"
S["GNULIB_CEILF"]="0"
S["GNULIB_CEIL"]="0"
S["GNULIB_CBRTL"]="0"
S["GNULIB_CBRTF"]="0"
S["GNULIB_CBRT"]="0"
S["GNULIB_ATAN2F"]="0"
S["GNULIB_ATANL"]="0"
S["GNULIB_ATANF"]="0"
S["GNULIB_ASINL"]="0"
S["GNULIB_ASINF"]="0"
S["GNULIB_ACOSL"]="0"
S["GNULIB_ACOSF"]="0"
S["GL_GENERATE_FNMATCH_H_FALSE"]=""
S["GL_GENERATE_FNMATCH_H_TRUE"]="#"
S["FNMATCH_H"]=""
S["REPLACE_ITOLD"]="0"
S["GL_GENERATE_FLOAT_H_FALSE"]=""
S["GL_GENERATE_FLOAT_H_TRUE"]="#"
S["FLOAT_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_FLOAT_H"]=""
S["NEXT_FLOAT_H"]=""
S["LIB_HAS_ACL"]=""
S["LIB_FDATASYNC"]=""
S["NEXT_AS_FIRST_DIRECTIVE_FCNTL_H"]="<fcntl.h>"
S["NEXT_FCNTL_H"]="<fcntl.h>"
S["REPLACE_OPENAT"]="0"
S["REPLACE_OPEN"]="0"
S["REPLACE_FCNTL"]="1"
S["HAVE_OPENAT"]="1"
S["HAVE_FCNTL"]="1"
S["GNULIB_OPENAT"]="1"
S["GNULIB_OPEN"]="1"
S["GNULIB_NONBLOCKING"]="0"
S["GNULIB_FCNTL"]="1"
S["REPLACE_VSPRINTF"]="0"
S["REPLACE_VSNPRINTF"]="0"
S["REPLACE_VPRINTF"]="1"
S["REPLACE_VFPRINTF"]="1"
S["REPLACE_VDPRINTF"]="0"
S["REPLACE_VASPRINTF"]="1"
S["REPLACE_TMPFILE"]="0"
S["REPLACE_STDIO_WRITE_FUNCS"]="0"
S["REPLACE_STDIO_READ_FUNCS"]="0"
S["REPLACE_SPRINTF"]="0"
S["REPLACE_SNPRINTF"]="0"
S["REPLACE_RENAMEAT"]="0"
S["REPLACE_RENAME"]="0"
S["REPLACE_REMOVE"]="0"
S["REPLACE_PRINTF"]="0"
S["REPLACE_POPEN"]="0"
S["REPLACE_PERROR"]="0"
S["REPLACE_OBSTACK_PRINTF"]="0"
S["REPLACE_GETLINE"]="0"
S["REPLACE_GETDELIM"]="0"
S["REPLACE_FTELLO"]="0"
S["REPLACE_FTELL"]="0"
S["REPLACE_FSEEKO"]="1"
S["REPLACE_FSEEK"]="1"
S["REPLACE_FREOPEN"]="0"
S["REPLACE_FPURGE"]="0"
S["REPLACE_FPRINTF"]="0"
S["REPLACE_FOPEN"]="0"
S["REPLACE_FFLUSH"]="1"
S["REPLACE_FDOPEN"]="0"
S["REPLACE_FCLOSE"]="1"
S["REPLACE_DPRINTF"]="0"
S["HAVE_VDPRINTF"]="1"
S["HAVE_VASPRINTF"]="1"
S["HAVE_RENAMEAT"]="1"
S["HAVE_POPEN"]="1"
S["HAVE_PCLOSE"]="1"
S["HAVE_FTELLO"]="1"
S["HAVE_FSEEKO"]="1"
S["HAVE_DPRINTF"]="1"
S["HAVE_DECL_VSNPRINTF"]="1"
S["HAVE_DECL_SNPRINTF"]="1"
S["HAVE_DECL_OBSTACK_PRINTF"]="1"
S["HAVE_DECL_GETLINE"]="1"
S["HAVE_DECL_GETDELIM"]="1"
S["HAVE_DECL_FTELLO"]="1"
S["HAVE_DECL_FSEEKO"]="1"
S["HAVE_DECL_FPURGE"]="0"
S["GNULIB_VSPRINTF_POSIX"]="0"
S["GNULIB_VSNPRINTF"]="0"
S["GNULIB_VPRINTF_POSIX"]="1"
S["GNULIB_VPRINTF"]="1"
S["GNULIB_VFPRINTF_POSIX"]="1"
S["GNULIB_VFPRINTF"]="1"
S["GNULIB_VDPRINTF"]="0"
S["GNULIB_VSCANF"]="0"
S["GNULIB_VFSCANF"]="0"
S["GNULIB_VASPRINTF"]="1"
S["GNULIB_TMPFILE"]="0"
S["GNULIB_STDIO_H_SIGPIPE"]="0"
S["GNULIB_STDIO_H_NONBLOCKING"]="0"
S["GNULIB_SPRINTF_POSIX"]="0"
S["GNULIB_SNPRINTF"]="1"
S["GNULIB_SCANF"]="1"
S["GNULIB_RENAMEAT"]="0"
S["GNULIB_RENAME"]="1"
S["GNULIB_REMOVE"]="1"
S["GNULIB_PUTS"]="1"
S["GNULIB_PUTCHAR"]="1"
S["GNULIB_PUTC"]="1"
S["GNULIB_PRINTF_POSIX"]="0"
S["GNULIB_PRINTF"]="1"
S["GNULIB_POPEN"]="0"
S["GNULIB_PERROR"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_PCLOSE"]="0"
S["GNULIB_OBSTACK_PRINTF_POSIX"]="0"
S["GNULIB_OBSTACK_PRINTF"]="0"
S["GNULIB_GETLINE"]="1"
S["GNULIB_GETDELIM"]="1"
S["GNULIB_GETCHAR"]="1"
S["GNULIB_GETC"]="1"
S["GNULIB_FWRITE"]="1"
S["GNULIB_FTELLO"]="1"
S["GNULIB_FTELL"]="1"
S["GNULIB_FSEEKO"]="1"
S["GNULIB_FSEEK"]="1"
S["GNULIB_FSCANF"]="1"
S["GNULIB_FREOPEN"]="1"
S["GNULIB_FREAD"]="1"
S["GNULIB_FPUTS"]="1"
S["GNULIB_FPUTC"]="1"
S["GNULIB_FPURGE"]="1"
S["GNULIB_FPRINTF_POSIX"]="0"
S["GNULIB_FPRINTF"]="1"
S["GNULIB_FOPEN"]="1"
S["GNULIB_FGETS"]="1"
S["GNULIB_FGETC"]="1"
S["GNULIB_FFLUSH"]="1"
S["GNULIB_FDOPEN"]="1"
S["GNULIB_FCLOSE"]="1"
S["GNULIB_DPRINTF"]="0"
S["REPLACE_UTIMENSAT"]="1"
S["REPLACE_STAT"]="0"
S["REPLACE_MKNOD"]="0"
S["REPLACE_MKFIFO"]="0"
S["REPLACE_MKDIR"]="0"
S["REPLACE_LSTAT"]="0"
S["REPLACE_FUTIMENS"]="1"
S["REPLACE_FSTATAT"]="0"
S["REPLACE_FSTAT"]="0"
S["HAVE_UTIMENSAT"]="1"
S["HAVE_MKNODAT"]="1"
S["HAVE_MKNOD"]="1"
S["HAVE_MKFIFOAT"]="1"
S["HAVE_MKFIFO"]="1"
S["HAVE_MKDIRAT"]="1"
S["HAVE_LSTAT"]="1"
S["HAVE_LCHMOD"]="0"
S["HAVE_FUTIMENS"]="1"
S["HAVE_FSTATAT"]="1"
S["HAVE_FCHMODAT"]="1"
S["GNULIB_UTIMENSAT"]="1"
S["GNULIB_STAT"]="1"
S["GNULIB_MKNODAT"]="0"
S["GNULIB_MKNOD"]="1"
S["GNULIB_MKFIFOAT"]="0"
S["GNULIB_MKFIFO"]="1"
S["GNULIB_MKDIRAT"]="0"
S["GNULIB_LSTAT"]="1"
S["GNULIB_LCHMOD"]="1"
S["GNULIB_FUTIMENS"]="1"
S["GNULIB_FSTATAT"]="1"
S["GNULIB_FSTAT"]="1"
S["GNULIB_FCHMODAT"]="1"
S["LIB_EACCESS"]=""
S["EOVERFLOW_VALUE"]=""
S["EOVERFLOW_HIDDEN"]=""
S["ENOLINK_VALUE"]=""
S["ENOLINK_HIDDEN"]=""
S["EMULTIHOP_VALUE"]=""
S["EMULTIHOP_HIDDEN"]=""
S["GL_GENERATE_ERRNO_H_FALSE"]=""
S["GL_GENERATE_ERRNO_H_TRUE"]="#"
S["ERRNO_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_ERRNO_H"]=""
S["NEXT_ERRNO_H"]=""
S["HAVE_DIRENT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_DIRENT_H"]="<dirent.h>"
S["NEXT_DIRENT_H"]="<dirent.h>"
S["NEXT_AS_FIRST_DIRECTIVE_CTYPE_H"]="<ctype.h>"
S["NEXT_CTYPE_H"]="<ctype.h>"
S["HAVE_ISBLANK"]="1"
S["GNULIB_ISBLANK"]="1"
S["LIB_CRYPTO"]=""
S["pkglibexecdir"]="${libexecdir}/${PACKAGE}"
S["runstatedir"]="${localstatedir}/run"
S["lispdir"]="${datarootdir}/emacs/site-lisp"
S["REPLACE_FDOPENDIR"]="0"
S["REPLACE_DIRFD"]="0"
S["REPLACE_CLOSEDIR"]="0"
S["REPLACE_OPENDIR"]="0"
S["HAVE_ALPHASORT"]="1"
S["HAVE_SCANDIR"]="1"
S["HAVE_FDOPENDIR"]="1"
S["HAVE_DECL_FDOPENDIR"]="1"
S["HAVE_DECL_DIRFD"]="1"
S["HAVE_CLOSEDIR"]="1"
S["HAVE_REWINDDIR"]="1"
S["HAVE_READDIR"]="1"
S["HAVE_OPENDIR"]="1"
S["GNULIB_ALPHASORT"]="0"
S["GNULIB_SCANDIR"]="0"
S["GNULIB_FDOPENDIR"]="1"
S["GNULIB_DIRFD"]="1"
S["GNULIB_CLOSEDIR"]="1"
S["GNULIB_REWINDDIR"]="1"
S["GNULIB_READDIR"]="1"
S["GNULIB_OPENDIR"]="1"
S["HAVE_WINSOCK2_H"]="0"
S["REPLACE_IOCTL"]="1"
S["SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS"]="0"
S["SYS_IOCTL_H_HAVE_WINSOCK2_H"]="0"
S["GNULIB_IOCTL"]="IN_COREUTILS_GNULIB_TESTS"
S["HAVE_MSVC_INVALID_PARAMETER_HANDLER"]="0"
S["LIB_CLOCK_GETTIME"]=""
S["UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS"]="0"
S["UNISTD_H_HAVE_WINSOCK2_H"]="0"
S["REPLACE_WRITE"]="0"
S["REPLACE_USLEEP"]="0"
S["REPLACE_UNLINKAT"]="0"
S["REPLACE_UNLINK"]="0"
S["REPLACE_TTYNAME_R"]="0"
S["REPLACE_SYMLINKAT"]="0"
S["REPLACE_SYMLINK"]="0"
S["REPLACE_SLEEP"]="0"
S["REPLACE_RMDIR"]="0"
S["REPLACE_READLINKAT"]="0"
S["REPLACE_READLINK"]="0"
S["REPLACE_READ"]="0"
S["REPLACE_PWRITE"]="0"
S["REPLACE_PREAD"]="0"
S["REPLACE_LSEEK"]="0"
S["REPLACE_LINKAT"]="0"
S["REPLACE_LINK"]="0"
S["REPLACE_LCHOWN"]="0"
S["REPLACE_ISATTY"]="0"
S["REPLACE_GETPAGESIZE"]="0"
S["REPLACE_GETGROUPS"]="0"
S["REPLACE_GETLOGIN_R"]="0"
S["REPLACE_GETDTABLESIZE"]="0"
S["REPLACE_GETDOMAINNAME"]="0"
S["REPLACE_GETCWD"]="0"
S["REPLACE_FTRUNCATE"]="0"
S["REPLACE_FCHOWNAT"]="0"
S["REPLACE_DUP2"]="0"
S["REPLACE_DUP"]="0"
S["REPLACE_CLOSE"]="0"
S["REPLACE_CHOWN"]="0"
S["HAVE_SYS_PARAM_H"]="0"
S["HAVE_OS_H"]="0"
S["HAVE_DECL_TTYNAME_R"]="1"
S["HAVE_DECL_SETHOSTNAME"]="1"
S["HAVE_DECL_GETUSERSHELL"]="1"
S["HAVE_DECL_GETPAGESIZE"]="1"
S["HAVE_DECL_GETLOGIN_R"]="1"
S["HAVE_DECL_GETDOMAINNAME"]="1"
S["HAVE_DECL_FDATASYNC"]="1"
S["HAVE_DECL_FCHDIR"]="1"
S["HAVE_DECL_ENVIRON"]="1"
S["HAVE_USLEEP"]="1"
S["HAVE_UNLINKAT"]="1"
S["HAVE_SYMLINKAT"]="1"
S["HAVE_SYMLINK"]="1"
S["HAVE_SLEEP"]="1"
S["HAVE_SETHOSTNAME"]="1"
S["HAVE_READLINKAT"]="1"
S["HAVE_READLINK"]="1"
S["HAVE_PWRITE"]="1"
S["HAVE_PREAD"]="1"
S["HAVE_PIPE2"]="1"
S["HAVE_PIPE"]="1"
S["HAVE_LINKAT"]="1"
S["HAVE_LINK"]="1"
S["HAVE_LCHOWN"]="1"
S["HAVE_GROUP_MEMBER"]="1"
S["HAVE_GETPAGESIZE"]="1"
S["HAVE_GETLOGIN"]="1"
S["HAVE_GETHOSTNAME"]="1"
S["HAVE_GETGROUPS"]="1"
S["HAVE_GETDTABLESIZE"]="1"
S["HAVE_FTRUNCATE"]="1"
S["HAVE_FSYNC"]="1"
S["HAVE_FDATASYNC"]="1"
S["HAVE_FCHOWNAT"]="1"
S["HAVE_FCHDIR"]="1"
S["HAVE_FACCESSAT"]="1"
S["HAVE_EUIDACCESS"]="1"
S["HAVE_DUP3"]="1"
S["HAVE_DUP2"]="1"
S["HAVE_CHOWN"]="1"
S["GNULIB_WRITE"]="1"
S["GNULIB_USLEEP"]="0"
S["GNULIB_UNLINKAT"]="1"
S["GNULIB_UNLINK"]="1"
S["GNULIB_UNISTD_H_SIGPIPE"]="0"
S["GNULIB_UNISTD_H_NONBLOCKING"]="0"
S["GNULIB_TTYNAME_R"]="0"
S["GNULIB_SYMLINKAT"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_SYMLINK"]="1"
S["GNULIB_SLEEP"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_SETHOSTNAME"]="0"
S["GNULIB_RMDIR"]="1"
S["GNULIB_READLINKAT"]="1"
S["GNULIB_READLINK"]="1"
S["GNULIB_READ"]="1"
S["GNULIB_PWRITE"]="0"
S["GNULIB_PREAD"]="0"
S["GNULIB_PIPE2"]="0"
S["GNULIB_PIPE"]="1"
S["GNULIB_LSEEK"]="1"
S["GNULIB_LINKAT"]="1"
S["GNULIB_LINK"]="1"
S["GNULIB_LCHOWN"]="1"
S["GNULIB_ISATTY"]="1"
S["GNULIB_GROUP_MEMBER"]="1"
S["GNULIB_GETUSERSHELL"]="1"
S["GNULIB_GETPAGESIZE"]="1"
S["GNULIB_GETLOGIN_R"]="0"
S["GNULIB_GETLOGIN"]="1"
S["GNULIB_GETHOSTNAME"]="1"
S["GNULIB_GETGROUPS"]="1"
S["GNULIB_GETDTABLESIZE"]="1"
S["GNULIB_GETDOMAINNAME"]="0"
S["GNULIB_GETCWD"]="1"
S["GNULIB_FTRUNCATE"]="1"
S["GNULIB_FSYNC"]="1"
S["GNULIB_FDATASYNC"]="1"
S["GNULIB_FCHOWNAT"]="1"
S["GNULIB_FCHDIR"]="1"
S["GNULIB_FACCESSAT"]="1"
S["GNULIB_EUIDACCESS"]="1"
S["GNULIB_ENVIRON"]="1"
S["GNULIB_DUP3"]="0"
S["GNULIB_DUP2"]="1"
S["GNULIB_DUP"]="1"
S["GNULIB_CLOSE"]="1"
S["GNULIB_CHOWN"]="1"
S["GNULIB_CHDIR"]="1"
S["REPLACE_WCTOMB"]="0"
S["REPLACE_UNSETENV"]="0"
S["REPLACE_STRTOD"]="0"
S["REPLACE_SETENV"]="0"
S["REPLACE_REALPATH"]="0"
S["REPLACE_REALLOC"]="0"
S["REPLACE_RANDOM_R"]="0"
S["REPLACE_QSORT_R"]="0"
S["REPLACE_PUTENV"]="0"
S["REPLACE_PTSNAME_R"]="0"
S["REPLACE_PTSNAME"]="0"
S["REPLACE_MKSTEMP"]="0"
S["REPLACE_MBTOWC"]="0"
S["REPLACE_MALLOC"]="0"
S["REPLACE_CANONICALIZE_FILE_NAME"]="0"
S["REPLACE_CALLOC"]="0"
S["HAVE_DECL_UNSETENV"]="1"
S["HAVE_UNLOCKPT"]="1"
S["HAVE_SYS_LOADAVG_H"]="0"
S["HAVE_STRUCT_RANDOM_DATA"]="1"
S["HAVE_STRTOULL"]="1"
S["HAVE_STRTOLL"]="1"
S["HAVE_STRTOD"]="1"
S["HAVE_DECL_SETENV"]="1"
S["HAVE_SETENV"]="1"
S["HAVE_SECURE_GETENV"]="1"
S["HAVE_RPMATCH"]="1"
S["HAVE_REALPATH"]="1"
S["HAVE_RANDOM_R"]="1"
S["HAVE_RANDOM_H"]="1"
S["HAVE_RANDOM"]="1"
S["HAVE_PTSNAME_R"]="1"
S["HAVE_PTSNAME"]="1"
S["HAVE_POSIX_OPENPT"]="1"
S["HAVE_MKSTEMPS"]="1"
S["HAVE_MKSTEMP"]="1"
S["HAVE_MKOSTEMPS"]="1"
S["HAVE_MKOSTEMP"]="1"
S["HAVE_MKDTEMP"]="1"
S["HAVE_GRANTPT"]="1"
S["HAVE_GETSUBOPT"]="1"
S["HAVE_DECL_GETLOADAVG"]="1"
S["HAVE_CANONICALIZE_FILE_NAME"]="1"
S["HAVE_ATOLL"]="1"
S["HAVE__EXIT"]="1"
S["GNULIB_WCTOMB"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_UNSETENV"]="1"
S["GNULIB_UNLOCKPT"]="0"
S["GNULIB_SYSTEM_POSIX"]="0"
S["GNULIB_STRTOULL"]="1"
S["GNULIB_STRTOLL"]="1"
S["GNULIB_STRTOD"]="1"
S["GNULIB_SETENV"]="1"
S["GNULIB_SECURE_GETENV"]="1"
S["GNULIB_RPMATCH"]="1"
S["GNULIB_REALPATH"]="0"
S["GNULIB_REALLOC_POSIX"]="1"
S["GNULIB_RANDOM_R"]="0"
S["GNULIB_RANDOM"]="0"
S["GNULIB_QSORT_R"]="0"
S["GNULIB_PUTENV"]="1"
S["GNULIB_PTSNAME_R"]="0"
S["GNULIB_PTSNAME"]="0"
S["GNULIB_POSIX_OPENPT"]="0"
S["GNULIB_MKSTEMPS"]="0"
S["GNULIB_MKSTEMP"]="1"
S["GNULIB_MKOSTEMPS"]="0"
S["GNULIB_MKOSTEMP"]="0"
S["GNULIB_MKDTEMP"]="0"
S["GNULIB_MBTOWC"]="1"
S["GNULIB_MALLOC_POSIX"]="1"
S["GNULIB_GRANTPT"]="0"
S["GNULIB_GETSUBOPT"]="0"
S["GNULIB_GETLOADAVG"]="1"
S["GNULIB_CANONICALIZE_FILE_NAME"]="1"
S["GNULIB_CALLOC_POSIX"]="1"
S["GNULIB_ATOLL"]="0"
S["GNULIB__EXIT"]="0"
S["LOCALE_FR"]="none"
S["REPLACE_WCSWIDTH"]="0"
S["REPLACE_WCWIDTH"]="0"
S["REPLACE_WCSNRTOMBS"]="0"
S["REPLACE_WCSRTOMBS"]="0"
S["REPLACE_WCRTOMB"]="0"
S["REPLACE_MBSNRTOWCS"]="0"
S["REPLACE_MBSRTOWCS"]="0"
S["REPLACE_MBRLEN"]="0"
S["REPLACE_MBRTOWC"]="0"
S["REPLACE_MBSINIT"]="0"
S["REPLACE_WCTOB"]="0"
S["REPLACE_BTOWC"]="0"
S["REPLACE_MBSTATE_T"]="0"
S["HAVE_DECL_WCWIDTH"]="1"
S["HAVE_DECL_WCTOB"]="1"
S["HAVE_WCSWIDTH"]="1"
S["HAVE_WCSTOK"]="1"
S["HAVE_WCSSTR"]="1"
S["HAVE_WCSPBRK"]="1"
S["HAVE_WCSSPN"]="1"
S["HAVE_WCSCSPN"]="1"
S["HAVE_WCSRCHR"]="1"
S["HAVE_WCSCHR"]="1"
S["HAVE_WCSDUP"]="1"
S["HAVE_WCSXFRM"]="1"
S["HAVE_WCSCOLL"]="1"
S["HAVE_WCSNCASECMP"]="1"
S["HAVE_WCSCASECMP"]="1"
S["HAVE_WCSNCMP"]="1"
S["HAVE_WCSCMP"]="1"
S["HAVE_WCSNCAT"]="1"
S["HAVE_WCSCAT"]="1"
S["HAVE_WCPNCPY"]="1"
S["HAVE_WCSNCPY"]="1"
S["HAVE_WCPCPY"]="1"
S["HAVE_WCSCPY"]="1"
S["HAVE_WCSNLEN"]="1"
S["HAVE_WCSLEN"]="1"
S["HAVE_WMEMSET"]="1"
S["HAVE_WMEMMOVE"]="1"
S["HAVE_WMEMCPY"]="1"
S["HAVE_WMEMCMP"]="1"
S["HAVE_WMEMCHR"]="1"
S["HAVE_WCSNRTOMBS"]="1"
S["HAVE_WCSRTOMBS"]="1"
S["HAVE_WCRTOMB"]="1"
S["HAVE_MBSNRTOWCS"]="1"
S["HAVE_MBSRTOWCS"]="1"
S["HAVE_MBRLEN"]="1"
S["HAVE_MBRTOWC"]="1"
S["HAVE_MBSINIT"]="1"
S["HAVE_BTOWC"]="1"
S["GNULIB_WCSWIDTH"]="1"
S["GNULIB_WCSTOK"]="0"
S["GNULIB_WCSSTR"]="0"
S["GNULIB_WCSPBRK"]="0"
S["GNULIB_WCSSPN"]="0"
S["GNULIB_WCSCSPN"]="0"
S["GNULIB_WCSRCHR"]="0"
S["GNULIB_WCSCHR"]="0"
S["GNULIB_WCSDUP"]="0"
S["GNULIB_WCSXFRM"]="0"
S["GNULIB_WCSCOLL"]="0"
S["GNULIB_WCSNCASECMP"]="0"
S["GNULIB_WCSCASECMP"]="0"
S["GNULIB_WCSNCMP"]="0"
S["GNULIB_WCSCMP"]="0"
S["GNULIB_WCSNCAT"]="0"
S["GNULIB_WCSCAT"]="0"
S["GNULIB_WCPNCPY"]="0"
S["GNULIB_WCSNCPY"]="0"
S["GNULIB_WCPCPY"]="0"
S["GNULIB_WCSCPY"]="0"
S["GNULIB_WCSNLEN"]="0"
S["GNULIB_WCSLEN"]="0"
S["GNULIB_WMEMSET"]="0"
S["GNULIB_WMEMMOVE"]="0"
S["GNULIB_WMEMCPY"]="0"
S["GNULIB_WMEMCMP"]="0"
S["GNULIB_WMEMCHR"]="0"
S["GNULIB_WCWIDTH"]="1"
S["GNULIB_WCSNRTOMBS"]="0"
S["GNULIB_WCSRTOMBS"]="0"
S["GNULIB_WCRTOMB"]="1"
S["GNULIB_MBSNRTOWCS"]="0"
S["GNULIB_MBSRTOWCS"]="1"
S["GNULIB_MBRLEN"]="1"
S["GNULIB_MBRTOWC"]="1"
S["GNULIB_MBSINIT"]="1"
S["GNULIB_WCTOB"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_BTOWC"]="1"
S["HAVE_FEATURES_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_ARPA_INET_H"]="<arpa/inet.h>"
S["NEXT_ARPA_INET_H"]="<arpa/inet.h>"
S["PRAGMA_COLUMNS"]=""
S["PRAGMA_SYSTEM_HEADER"]="#pragma GCC system_header"
S["INCLUDE_NEXT_AS_FIRST_DIRECTIVE"]="include_next"
S["INCLUDE_NEXT"]="include_next"
S["HAVE_ARPA_INET_H"]="1"
S["REPLACE_INET_PTON"]="0"
S["REPLACE_INET_NTOP"]="0"
S["HAVE_DECL_INET_PTON"]="1"
S["HAVE_DECL_INET_NTOP"]="1"
S["GNULIB_INET_PTON"]="IN_COREUTILS_GNULIB_TESTS"
S["GNULIB_INET_NTOP"]="1"
S["GL_GENERATE_ALLOCA_H_FALSE"]="#"
S["GL_GENERATE_ALLOCA_H_TRUE"]=""
S["ALLOCA_H"]="lib/alloca.h"
S["ALLOCA"]=""
S["USE_ACL"]="1"
S["LIB_ACL"]="-lacl"
S["GL_COND_LIBTOOL_FALSE"]=""
S["GL_COND_LIBTOOL_TRUE"]="#"
S["host_os"]="linux-gnu"
S["host_vendor"]="pc"
S["host_cpu"]="x86_64"
S["host"]="x86_64-pc-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="pc"
S["build_cpu"]="x86_64"
S["build"]="x86_64-pc-linux-gnu"
S["ARFLAGS"]="cr"
S["AR"]="ar"
S["LN_S"]="ln -s"
S["RANLIB"]="ranlib"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CPP"]="gcc -E"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]=""
S["LDFLAGS"]=""
S["CFLAGS"]="-g -O2"
S["CC"]="gcc"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__untar"]="$${TAR-tar} xf -"
S["am__tar"]="$${TAR-tar} chof - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="mawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="/usr/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]=""
S["install_sh"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/install-sh"
S["MAKEINFO"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/missing makeinfo"
S["AUTOHEADER"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/missing autoheader"
S["AUTOMAKE"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/missing automake-1.15"
S["AUTOCONF"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/missing autoconf"
S["ACLOCAL"]="${SHELL} /home/foo/Downloads/lava_corpus/LAVA-M/uniq/coreutils-8.24-lava-safe/build-aux/missing aclocal-1.15"
S["VERSION"]="8.24"
S["PACKAGE"]="coreutils"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]=""
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]="http://www.gnu.org/software/coreutils/"
S["PACKAGE_BUGREPORT"]="bug-coreutils@gnu.org"
S["PACKAGE_STRING"]="GNU coreutils 8.24"
S["PACKAGE_VERSION"]="8.24"
S["PACKAGE_TARNAME"]="coreutils"
S["PACKAGE_NAME"]="GNU coreutils"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/bash"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"GNU coreutils\""
D["PACKAGE_TARNAME"]=" \"coreutils\""
D["PACKAGE_VERSION"]=" \"8.24\""
D["PACKAGE_STRING"]=" \"GNU coreutils 8.24\""
D["PACKAGE_BUGREPORT"]=" \"bug-coreutils@gnu.org\""
D["PACKAGE_URL"]=" \"http://www.gnu.org/software/coreutils/\""
D["PACKAGE"]=" \"coreutils\""
D["VERSION"]=" \"8.24\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_DARWIN_C_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["__USE_MINGW_ANSI_STDIO"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["HAVE_FSEEKO"]=" 1"
D["_DARWIN_USE_64_BIT_INODE"]=" 1"
D["_REENTRANT"]=" 1"
D["_THREAD_SAFE"]=" 1"
D["HAVE_FCHMOD"]=" 1"
D["HAVE_PATHCONF"]=" 1"
D["HAVE_BTOWC"]=" 1"
D["HAVE_CANONICALIZE_FILE_NAME"]=" 1"
D["HAVE_REALPATH"]=" 1"
D["HAVE_READLINKAT"]=" 1"
D["HAVE_CHOWN"]=" 1"
D["HAVE_FCHOWN"]=" 1"
D["HAVE_FCHDIR"]=" 1"
D["HAVE_FDOPENDIR"]=" 1"
D["HAVE_FACCESSAT"]=" 1"
D["HAVE_POSIX_FADVISE"]=" 1"
D["HAVE_FCHMODAT"]=" 1"
D["HAVE_FCNTL"]=" 1"
D["HAVE_SYMLINK"]=" 1"
D["HAVE_MEMPCPY"]=" 1"
D["HAVE_ISBLANK"]=" 1"
D["HAVE_ISWCTYPE"]=" 1"
D["HAVE_MBSRTOWCS"]=" 1"
D["HAVE_WMEMCHR"]=" 1"
D["HAVE_WMEMCPY"]=" 1"
D["HAVE_WMEMPCPY"]=" 1"
D["HAVE___FPURGE"]=" 1"
D["HAVE___FREADING"]=" 1"
D["HAVE_FSTATAT"]=" 1"
D["HAVE_FSYNC"]=" 1"
D["HAVE_STRTOF"]=" 1"
D["HAVE_FTRUNCATE"]=" 1"
D["HAVE_OPENAT"]=" 1"
D["HAVE_FSTATFS"]=" 1"
D["HAVE_FUTIMENS"]=" 1"
D["HAVE_GETDELIM"]=" 1"
D["HAVE_GETDTABLESIZE"]=" 1"
D["HAVE_GETLOGIN"]=" 1"
D["HAVE_FLOCKFILE"]=" 1"
D["HAVE_FUNLOCKFILE"]=" 1"
D["HAVE___FSETLOCKING"]=" 1"
D["HAVE_TCGETATTR"]=" 1"
D["HAVE_TCSETATTR"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["HAVE_GETUSERSHELL"]=" 1"
D["HAVE_ISWCNTRL"]=" 1"
D["HAVE_ISWBLANK"]=" 1"
D["HAVE_LINK"]=" 1"
D["HAVE_READLINK"]=" 1"
D["HAVE_LINKAT"]=" 1"
D["HAVE_LSTAT"]=" 1"
D["HAVE_MBSINIT"]=" 1"
D["HAVE_MBRTOWC"]=" 1"
D["HAVE_MBRLEN"]=" 1"
D["HAVE_ISASCII"]=" 1"
D["HAVE_MPROTECT"]=" 1"
D["HAVE_GETGROUPLIST"]=" 1"
D["HAVE_MKFIFO"]=" 1"
D["HAVE_MKNOD"]=" 1"
D["HAVE_MKSTEMP"]=" 1"
D["HAVE_NL_LANGINFO"]=" 1"
D["HAVE_PIPE"]=" 1"
D["HAVE_UTMPNAME"]=" 1"
D["HAVE_UTMPXNAME"]=" 1"
D["HAVE_SECURE_GETENV"]=" 1"
D["HAVE_SETENV"]=" 1"
D["HAVE_SETTIMEOFDAY"]=" 1"
D["HAVE_SIGACTION"]=" 1"
D["HAVE_SIGALTSTACK"]=" 1"
D["HAVE_SIGINTERRUPT"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_STPNCPY"]=" 1"
D["HAVE_STRDUP"]=" 1"
D["HAVE_STRERROR_R"]=" 1"
D["HAVE___XPG_STRERROR_R"]=" 1"
D["HAVE_TZSET"]=" 1"
D["HAVE_STRNDUP"]=" 1"
D["HAVE_STRTOIMAX"]=" 1"
D["HAVE_STRTOUMAX"]=" 1"
D["HAVE_LOCALTIME_R"]=" 1"
D["HAVE_UNLINKAT"]=" 1"
D["HAVE_FUTIMES"]=" 1"
D["HAVE_FUTIMESAT"]=" 1"
D["HAVE_UTIMENSAT"]=" 1"
D["HAVE_LUTIMES"]=" 1"
D["HAVE_WCRTOMB"]=" 1"
D["HAVE_WCWIDTH"]=" 1"
D["HAVE_WCSWIDTH"]=" 1"
D["HAVE_GETEGID"]=" 1"
D["HAVE_TTYNAME"]=" 1"
D["HAVE_NEWLOCALE"]=" 1"
D["HAVE_SLEEP"]=" 1"
D["HAVE_CATGETS"]=" 1"
D["HAVE_SYMLINKAT"]=" 1"
D["HAVE_SHUTDOWN"]=" 1"
D["HAVE_WCTOB"]=" 1"
D["HAVE_SETRLIMIT"]=" 1"
D["HAVE_PRCTL"]=" 1"
D["HAVE_ENDGRENT"]=" 1"
D["HAVE_ENDPWENT"]=" 1"
D["HAVE_FALLOCATE"]=" 1"
D["HAVE_ISWSPACE"]=" 1"
D["HAVE_SETGROUPS"]=" 1"
D["HAVE_SETHOSTNAME"]=" 1"
D["HAVE_SYNC"]=" 1"
D["HAVE_SYNCFS"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SYSINFO"]=" 1"
D["HAVE_TCGETPGRP"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_FEATURES_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_WCTYPE_H"]=" 1"
D["HAVE_STDIO_EXT_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_VFS_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_GETOPT_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_GRP_H"]=" 1"
D["HAVE_ICONV_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_MATH_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_STATVFS_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_PTHREAD_H"]=" 1"
D["HAVE_UTMP_H"]=" 1"
D["HAVE_UTMPX_H"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE_UTIME_H"]=" 1"
D["HAVE_LINUX_FALLOC_H"]=" 1"
D["HAVE_PATHS_H"]=" 1"
D["HAVE_SYSLOG_H"]=" 1"
D["HAVE_PWD_H"]=" 1"
D["D_INO_IN_DIRENT"]=" 1"
D["HAVE_LONG_FILE_NAMES"]=" 1"
D["restrict"]=" __restrict"
D["HAVE_LANGINFO_CODESET"]=" 1"
D["HAVE_C99_STRTOLD"]=" 1"
D["FUNC_REALPATH_WORKS"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_CHOWN"]=" 1"
D["HAVE_ENVIRON_DECL"]=" 1"
D["HAVE_DECL_STRERROR_R"]=" 1"
D["HAVE_STRERROR_R"]=" 1"
D["STRERROR_R_CHAR_P"]=" 1"
D["GETGROUPS_T"]=" gid_t"
D["HAVE_DECL_FCHDIR"]=" 1"
D["HAVE_WORKING_O_NOATIME"]=" 1"
D["HAVE_WORKING_O_NOFOLLOW"]=" 1"
D["PROMOTED_MODE_T"]=" mode_t"
D["HAVE_DECL_FDATASYNC"]=" 1"
D["HAVE_DECL_STRMODE"]=" 0"
D["HAVE_MBSTATE_T"]=" 1"
D["HAVE_DECL_ALARM"]=" 1"
D["HAVE_DECL_FSEEKO"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["LSTAT_FOLLOWS_SLASHED_SYMLINK"]=" 1"
D["HAVE_DECL_FTELLO"]=" 1"
D["HAVE_SHUTDOWN"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE"]=" 1"
D["HAVE_SA_FAMILY_T"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY"]=" 1"
D["HAVE_GETHOSTBYNAME"]=" 1"
D["HAVE_GETSERVBYNAME"]=" 1"
D["HAVE_DECL_INET_NTOP"]=" 1"
D["HAVE_IPV4"]=" 1"
D["HAVE_IPV6"]=" 1"
D["HAVE_DECL_GETCWD"]=" 1"
D["HAVE_DECL_GETDELIM"]=" 1"
D["HAVE_DECL_GETDTABLESIZE"]=" 1"
D["HAVE_UNSIGNED_LONG_LONG_INT"]=" 1"
D["HAVE_LONG_LONG_INT"]=" 1"
D["HAVE_DECL_GETLINE"]=" 1"
D["HAVE_GETOPT_H"]=" 1"
D["HAVE_GETOPT_LONG_ONLY"]=" 1"
D["HAVE_DECL_GETENV"]=" 1"
D["HAVE_DECL_GETPASS"]=" 1"
D["HAVE_DECL_FFLUSH_UNLOCKED"]=" 1"
D["HAVE_DECL_FLOCKFILE"]=" 1"
D["HAVE_DECL_FPUTS_UNLOCKED"]=" 1"
D["HAVE_DECL_FUNLOCKFILE"]=" 1"
D["HAVE_DECL_PUTC_UNLOCKED"]=" 1"
D["HAVE_ICONV"]=" 1"
D["ICONV_CONST"]=" "
D["HAVE_INTTYPES_H"]=" 1"
D["DBL_EXPBIT0_WORD"]=" 1"
D["DBL_EXPBIT0_BIT"]=" 20"
D["FLT_EXPBIT0_WORD"]=" 0"
D["FLT_EXPBIT0_BIT"]=" 23"
D["HAVE_WINT_T"]=" 1"
D["HAVE_TOWLOWER"]=" 1"
D["HAVE_DECL_GETC_UNLOCKED"]=" 1"
D["HAVE_WCHAR_T"]=" 1"
D["USE_POSIX_THREADS"]=" 1"
D["USE_POSIX_THREADS_WEAK"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["MALLOC_0_IS_NONNULL"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_DECL_MEMRCHR"]=" 1"
D["HAVE__BOOL"]=" 1"
D["HAVE_COMPOUND_LITERALS"]=" 1"
D["HAVE_TM_GMTOFF"]=" 1"
D["HAVE_SIGSET_T"]=" 1"
D["HAVE_DECL_SETENV"]=" 1"
D["HAVE_SEARCH_H"]=" 1"
D["HAVE_TSEARCH"]=" 1"
D["HAVE_DECL_SNPRINTF"]=" 1"
D["HAVE_DECL_STPNCPY"]=" 1"
D["HAVE_DECL_STRDUP"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_DECL_STRNDUP"]=" 1"
D["HAVE_DECL_STRNLEN"]=" 1"
D["HAVE_DECL_STRSIGNAL"]=" 1"
D["HAVE_DECL_SYS_SIGLIST"]=" 1"
D["HAVE_DECL_STRTOIMAX"]=" 1"
D["HAVE_DECL_STRTOUMAX"]=" 1"
D["HAVE_DECL_CLEARERR_UNLOCKED"]=" 1"
D["HAVE_DECL_FEOF_UNLOCKED"]=" 1"
D["HAVE_DECL_FERROR_UNLOCKED"]=" 1"
D["HAVE_DECL_FGETS_UNLOCKED"]=" 1"
D["HAVE_DECL_FPUTC_UNLOCKED"]=" 1"
D["HAVE_DECL_FREAD_UNLOCKED"]=" 1"
D["HAVE_DECL_FWRITE_UNLOCKED"]=" 1"
D["HAVE_DECL_GETCHAR_UNLOCKED"]=" 1"
D["HAVE_DECL_PUTCHAR_UNLOCKED"]=" 1"
D["HAVE_DECL_UNSETENV"]=" 1"
D["HAVE_WORKING_UTIMES"]=" 1"
D["HAVE_STRUCT_UTIMBUF"]=" 1"
D["HAVE_INTTYPES_H_WITH_UINTMAX"]=" 1"
D["HAVE_STDINT_H_WITH_UINTMAX"]=" 1"
D["HAVE_INTMAX_T"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_STRNLEN"]=" 1"
D["HAVE_WCSLEN"]=" 1"
D["HAVE_WCSNLEN"]=" 1"
D["HAVE_MBRTOWC"]=" 1"
D["HAVE_WCRTOMB"]=" 1"
D["HAVE_DECL__SNPRINTF"]=" 0"
D["HAVE_SNPRINTF_RETVAL_C99"]=" 1"
D["CHECK_PRINTF_SAFE"]=" 1"
D["HAVE_DECL_WCWIDTH"]=" 1"
D["HAVE_LC_MESSAGES"]=" 1"
D["HAVE_DECL_STRERROR_R"]=" 1"
D["HAVE_SYS_ACL_H"]=" 1"
D["HAVE_ACL_GET_FILE"]=" 1"
D["HAVE_ACL_GET_FD"]=" 1"
D["HAVE_ACL_SET_FILE"]=" 1"
D["HAVE_ACL_SET_FD"]=" 1"
D["HAVE_ACL_FREE"]=" 1"
D["HAVE_ACL_FROM_MODE"]=" 1"
D["HAVE_ACL_FROM_TEXT"]=" 1"
D["HAVE_ACL_DELETE_DEF_FILE"]=" 1"
D["HAVE_ACL_EXTENDED_FILE"]=" 1"
D["HAVE_ACL_LIBACL_H"]=" 1"
D["HAVE_ACL_ENTRIES"]=" 1"
D["HAVE_ACL_FIRST_ENTRY"]=" 1"
D["USE_ACL"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["GNULIB_AREADLINKAT"]=" 1"
D["GNULIB_TEST_BTOWC"]=" 1"
D["HAVE_STRTOD_L"]=" 1"
D["HAVE_STRTOLD_L"]=" 1"
D["HAVE_CALLOC_GNU"]=" 1"
D["GNULIB_CALLOC_GNU"]=" 1"
D["HAVE_CALLOC_POSIX"]=" 1"
D["GNULIB_TEST_CALLOC_POSIX"]=" 1"
D["GNULIB_CANONICALIZE"]=" 1"
D["GNULIB_TEST_CANONICALIZE"]=" 1"
D["GNULIB_TEST_CANONICALIZE_FILE_NAME"]=" 1"
D["GNULIB_TEST_CHDIR"]=" 1"
D["GNULIB_TEST_CHOWN"]=" 1"
D["HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_CLOCK_SETTIME"]=" 1"
D["GNULIB_TEST_CLOEXEC"]=" 1"
D["GNULIB_TEST_CLOSE"]=" 1"
D["GNULIB_CLOSE_STREAM"]=" 1"
D["HAVE_CLOSEDIR"]=" 1"
D["GNULIB_TEST_CLOSEDIR"]=" 1"
D["D_INO_IN_DIRENT"]=" 1"
D["HAVE_STRUCT_DIRENT_D_TYPE"]=" 1"
D["GNULIB_DIRENT_SAFER"]=" 1"
D["HAVE_DIRFD"]=" 1"
D["HAVE_DECL_DIRFD"]=" 1"
D["GNULIB_TEST_DIRFD"]=" 1"
D["GNULIB_DIRNAME"]=" 1"
D["GNULIB_TEST_DUP"]=" 1"
D["HAVE_DUP2"]=" 1"
D["GNULIB_TEST_DUP2"]=" 1"
D["GNULIB_TEST_ENVIRON"]=" 1"
D["HAVE_EUIDACCESS"]=" 1"
D["GNULIB_TEST_EUIDACCESS"]=" 1"
D["GNULIB_FACCESSAT"]=" 1"
D["GNULIB_TEST_FACCESSAT"]=" 1"
D["GNULIB_TEST_FCHDIR"]=" 1"
D["GNULIB_FCHMODAT"]=" 1"
D["GNULIB_TEST_FCHMODAT"]=" 1"
D["GNULIB_FCHOWNAT"]=" 1"
D["GNULIB_TEST_FCHOWNAT"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["GNULIB_TEST_FCLOSE"]=" 1"
D["GNULIB_TEST_FCNTL"]=" 1"
D["GNULIB_FCNTL_SAFER"]=" 1"
D["GNULIB_FD_SAFER_FLAG"]=" 1"
D["GNULIB_TEST_FDATASYNC"]=" 1"
D["GNULIB_TEST_FDOPEN"]=" 1"
D["HAVE_DECL_FDOPENDIR"]=" 1"
D["GNULIB_TEST_FDOPENDIR"]=" 1"
D["GNULIB_FDOPENDIR"]=" 1"
D["GNULIB_FDUTIMENSAT"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["GNULIB_FFLUSH"]=" 1"
D["GNULIB_TEST_FFLUSH"]=" 1"
D["GETXATTR_WITH_POSIX_ACLS"]=" 1"
D["HAVE_STRUCT_STAT_ST_BLOCKS"]=" 1"
D["HAVE_ST_BLOCKS"]=" 1"
D["GNULIB_FILENAMECAT"]=" 1"
D["FLEXIBLE_ARRAY_MEMBER"]=" /**/"
D["GNULIB_TEST_FOPEN"]=" 1"
D["GNULIB_FOPEN_SAFER"]=" 1"
D["HAVE_DECL___FPENDING"]=" 1"
D["HAVE_DECL_FPURGE"]=" 0"
D["GNULIB_TEST_FPURGE"]=" 1"
D["GNULIB_TEST_FREOPEN"]=" 1"
D["GNULIB_FREOPEN_SAFER"]=" 1"
D["HAVE_FREXP_IN_LIBC"]=" 1"
D["GNULIB_TEST_FREXP"]=" 1"
D["HAVE_FREXPL_IN_LIBC"]=" 1"
D["GNULIB_TEST_FREXPL"]=" 1"
D["GNULIB_TEST_FSEEK"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["GNULIB_TEST_FSEEKO"]=" 1"
D["GNULIB_TEST_FSTAT"]=" 1"
D["GNULIB_TEST_FSTATAT"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["STAT_STATVFS"]=" 1"
D["STAT_STATFS2_FRSIZE"]=" 1"
D["HAVE_SYS_STATFS_H"]=" 1"
D["GNULIB_TEST_FSYNC"]=" 1"
D["GNULIB_TEST_FTELL"]=" 1"
D["GNULIB_TEST_FTELLO"]=" 1"
D["GNULIB_TEST_FTRUNCATE"]=" 1"
D["HAVE_STRUCT_STATFS_F_TYPE"]=" 1"
D["GNULIB_TEST_FUTIMENS"]=" 1"
D["HAVE_DECL_GAI_STRERROR"]=" 1"
D["HAVE_DECL_GAI_STRERRORA"]=" 0"
D["HAVE_DECL_GETADDRINFO"]=" 1"
D["HAVE_DECL_FREEADDRINFO"]=" 1"
D["HAVE_DECL_GETNAMEINFO"]=" 1"
D["HAVE_STRUCT_ADDRINFO"]=" 1"
D["GNULIB_TEST_GETADDRINFO"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_MINIMALLY_WORKING_GETCWD"]=" 1"
D["GNULIB_GETCWD"]=" 1"
D["GNULIB_TEST_GETCWD"]=" 1"
D["GNULIB_TEST_GETCWD"]=" 1"
D["GNULIB_TEST_GETDELIM"]=" 1"
D["GNULIB_TEST_GETDTABLESIZE"]=" 1"
D["HAVE_GETGROUPS"]=" 1"
D["GNULIB_TEST_GETGROUPS"]=" 1"
D["HAVE_GETHOSTNAME"]=" 1"
D["GNULIB_TEST_GETHOSTNAME"]=" 1"
D["HAVE_DECL_GETHRTIME"]=" 0"
D["GNULIB_TEST_GETLINE"]=" 1"
D["GNULIB_TEST_GETLOADAVG"]=" 1"
D["GNULIB_TEST_GETLOGIN"]=" 1"
D["GNULIB_TEST_GETOPT_GNU"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["GNULIB_TEST_GETPAGESIZE"]=" 1"
D["getpass"]=" gnu_getpass"
D["HAVE_DECL___FSETLOCKING"]=" 1"
D["HAVE_RUN_TZSET_TEST"]=" 1"
D["GETTIMEOFDAY_TIMEZONE"]=" void"
D["GNULIB_TEST_GETTIMEOFDAY"]=" 1"
D["HAVE_DECL_GETUSERSHELL"]=" 1"
D["GNULIB_TEST_GETUSERSHELL"]=" 1"
D["GNULIB_TEST_GROUP_MEMBER"]=" 1"
D["HOST_OPERATING_SYSTEM"]=" \"GNU/Linux\""
D["HAVE_GETHOSTBYNAME"]=" 1"
D["HAVE_DECL_INET_NTOP"]=" 1"
D["HAVE_INLINE"]=" 1"
D["HAVE_FIFO_PIPES"]=" 1"
D["PIPE_LINK_COUNT_MAX"]=" (1)"
D["GNULIB_TEST_ISATTY"]=" 1"
D["HAVE_ISNAND_IN_LIBC"]=" 1"
D["HAVE_ISNANF_IN_LIBC"]=" 1"
D["HAVE_ISNANL_IN_LIBC"]=" 1"
D["HAVE_DECL_ISWBLANK"]=" 1"
D["GNULIB_TEST_ISWBLANK"]=" 1"
D["GNULIB_TEST_LCHMOD"]=" 1"
D["HAVE_LCHOWN"]=" 1"
D["GNULIB_TEST_LCHOWN"]=" 1"
D["GNULIB_TEST_LINK"]=" 1"
D["LINK_FOLLOWS_SYMLINKS"]=" 0"
D["GNULIB_TEST_LINKAT"]=" 1"
D["GNULIB_TEST_LOCALECONV"]=" 1"
D["HAVE_PTHREAD_RWLOCK"]=" 1"
D["HAVE_PTHREAD_MUTEX_RECURSIVE"]=" 1"
D["GNULIB_LOCK"]=" 1"
D["GNULIB_TEST_LSEEK"]=" 1"
D["GNULIB_TEST_LSTAT"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_MALLOC_GNU"]=" 1"
D["GNULIB_MALLOC_GNU"]=" 1"
D["HAVE_MALLOC_POSIX"]=" 1"
D["GNULIB_TEST_MALLOC_POSIX"]=" 1"
D["GNULIB_TEST_MBRLEN"]=" 1"
D["GNULIB_TEST_MBRTOWC"]=" 1"
D["GNULIB_TEST_MBSCASECMP"]=" 1"
D["GNULIB_TEST_MBSINIT"]=" 1"
D["GNULIB_TEST_MBSLEN"]=" 1"
D["GNULIB_TEST_MBSRTOWCS"]=" 1"
D["GNULIB_TEST_MBSSTR"]=" 1"
D["HAVE_DECL_MBSWIDTH_IN_WCHAR_H"]=" 0"
D["HAVE_MBSTATE_T"]=" 1"
D["GNULIB_TEST_MBTOWC"]=" 1"
D["GNULIB_TEST_MEMCHR"]=" 1"
D["HAVE_MEMPCPY"]=" 1"
D["GNULIB_TEST_MEMPCPY"]=" 1"
D["HAVE_MEMRCHR"]=" 1"
D["GNULIB_TEST_MEMRCHR"]=" 1"
D["GNULIB_TEST_MKFIFO"]=" 1"
D["GNULIB_TEST_MKNOD"]=" 1"
D["GNULIB_TEST_MKSTEMP"]=" 1"
D["GNULIB_TEST_MKTIME"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["HAVE_MNTENT_H"]=" 1"
D["HAVE_GETMNTENT"]=" 1"
D["MOUNTED_GETMNTENT1"]=" 1"
D["HAVE_HASMNTOPT"]=" 1"
D["HAVE_BUG_BIG_NANOSLEEP"]=" 1"
D["GNULIB_TEST_NANOSLEEP"]=" 1"
D["FUNC_NL_LANGINFO_YESEXPR_WORKS"]=" 1"
D["GNULIB_TEST_NL_LANGINFO"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_SCHED_GETAFFINITY"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SCHED_GETAFFINITY_LIKE_GLIBC"]=" 1"
D["GNULIB_TEST_OPEN"]=" 1"
D["GNULIB_OPENAT"]=" 1"
D["GNULIB_TEST_OPENAT"]=" 1"
D["GNULIB_OPENAT_SAFER"]=" 1"
D["HAVE_OPENDIR"]=" 1"
D["GNULIB_TEST_OPENDIR"]=" 1"
D["HAVE_STRUCT_TM_TM_ZONE"]=" 1"
D["HAVE_TM_ZONE"]=" 1"
D["TIME_T_FITS_IN_LONG_INT"]=" 1"
D["HAVE_SYS_SYSINFO_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SYSINFO"]=" 1"
D["HAVE_STRUCT_SYSINFO_MEM_UNIT"]=" 1"
D["GNULIB_TEST_PIPE"]=" 1"
D["HAVE_FREXP_IN_LIBC"]=" 1"
D["HAVE_LDEXP_IN_LIBC"]=" 1"
D["HAVE_FREXPL_IN_LIBC"]=" 1"
D["HAVE_LDEXPL_IN_LIBC"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_NAME"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME"]=" 1"
D["HAVE_PTHREAD_T"]=" 1"
D["HAVE_PTHREAD_SPINLOCK_T"]=" 1"
D["GNULIB_PTHREAD"]=" 1"
D["GNULIB_TEST_PUTENV"]=" 1"
D["HAVE_RAISE"]=" 1"
D["GNULIB_TEST_RAISE"]=" 1"
D["GNULIB_TEST_READ"]=" 1"
D["HAVE_READDIR"]=" 1"
D["GNULIB_TEST_READDIR"]=" 1"
D["GNULIB_TEST_READLINK"]=" 1"
D["GNULIB_TEST_READLINKAT"]=" 1"
D["HAVE_DECL_GETUTENT"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_USER"]=" 1"
D["HAVE_STRUCT_UTMP_UT_USER"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_NAME"]=" 1"
D["HAVE_STRUCT_UTMP_UT_NAME"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_TYPE"]=" 1"
D["HAVE_STRUCT_UTMP_UT_TYPE"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_PID"]=" 1"
D["HAVE_STRUCT_UTMP_UT_PID"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_ID"]=" 1"
D["HAVE_STRUCT_UTMP_UT_ID"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_EXIT"]=" 1"
D["HAVE_STRUCT_UTMP_UT_EXIT"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_EXIT_E_EXIT"]=" 1"
D["HAVE_STRUCT_UTMP_UT_EXIT_E_EXIT"]=" 1"
D["HAVE_STRUCT_UTMPX_UT_EXIT_E_TERMINATION"]=" 1"
D["HAVE_STRUCT_UTMP_UT_EXIT_E_TERMINATION"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_REALLOC_GNU"]=" 1"
D["GNULIB_REALLOC_GNU"]=" 1"
D["HAVE_REALLOC_POSIX"]=" 1"
D["GNULIB_TEST_REALLOC_POSIX"]=" 1"
D["GNULIB_TEST_REMOVE"]=" 1"
D["GNULIB_TEST_RENAME"]=" 1"
D["HAVE_REWINDDIR"]=" 1"
D["GNULIB_TEST_REWINDDIR"]=" 1"
D["GNULIB_TEST_RMDIR"]=" 1"
D["HAVE_RPMATCH"]=" 1"
D["GNULIB_TEST_RPMATCH"]=" 1"
D["GNULIB_TEST_SECURE_GETENV"]=" 1"
D["GNULIB_TEST_SELECT"]=" 1"
D["HAVE_SELINUX_SELINUX_H"]=" 0"
D["HAVE_GETSERVBYNAME"]=" 1"
D["GNULIB_TEST_SETENV"]=" 1"
D["HAVE_STRUCT_SIGACTION_SA_SIGACTION"]=" 1"
D["GNULIB_TEST_SIGACTION"]=" 1"
D["GNULIB_TEST_SIGNBIT"]=" 1"
D["GNULIB_TEST_SIGPROCMASK"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["GNULIB_TEST_SNPRINTF"]=" 1"
D["GNULIB_SNPRINTF"]=" 1"
D["GNULIB_TEST_STAT"]=" 1"
D["HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC"]=" 1"
D["TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC"]=" 1"
D["GNULIB_STATAT"]=" 1"
D["GNULIB_FSCANF"]=" 1"
D["GNULIB_SCANF"]=" 1"
D["HAVE_STPCPY"]=" 1"
D["GNULIB_TEST_STPCPY"]=" 1"
D["HAVE_STPNCPY"]=" 1"
D["GNULIB_TEST_STPNCPY"]=" 1"
D["GNULIB_TEST_STRDUP"]=" 1"
D["GNULIB_STRERROR"]=" 1"
D["GNULIB_TEST_STRERROR"]=" 1"
D["my_strftime"]=" nstrftime"
D["GNULIB_TEST_STRNCAT"]=" 1"
D["GNULIB_TEST_STRNDUP"]=" 1"
D["GNULIB_TEST_STRNLEN"]=" 1"
D["HAVE_STRPBRK"]=" 1"
D["GNULIB_TEST_STRPBRK"]=" 1"
D["HAVE_STRSIGNAL"]=" 1"
D["GNULIB_TEST_STRSIGNAL"]=" 1"
D["GNULIB_TEST_STRSTR"]=" 1"
D["GNULIB_TEST_STRTOD"]=" 1"
D["HAVE_STRTOLL"]=" 1"
D["GNULIB_TEST_STRTOLL"]=" 1"
D["HAVE_STRTOULL"]=" 1"
D["GNULIB_TEST_STRTOULL"]=" 1"
D["GNULIB_TEST_SYMLINK"]=" 1"
D["HAVE_STRUCT_UTSNAME"]=" 1"
D["HAVE_DECL_LOCALTIME_R"]=" 1"
D["GNULIB_TEST_TIME_R"]=" 1"
D["HAVE_TIMER_SETTIME"]=" 1"
D["HAVE_UNAME"]=" 1"
D["GNULIB_UNISTR_U8_MBTOUCR"]=" 1"
D["GNULIB_UNISTR_U8_UCTOMB"]=" 1"
D["GNULIB_TEST_UNLINK"]=" 1"
D["GNULIB_TEST_UNLINKAT"]=" 1"
D["USE_UNLOCKED_IO"]=" 1"
D["HAVE_UNSETENV"]=" 1"
D["GNULIB_TEST_UNSETENV"]=" 1"
D["HAVE_PROC_UPTIME"]=" 1"
D["GNULIB_TEST_UTIMENSAT"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["GNULIB_TEST_VASPRINTF"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["REPLACE_VFPRINTF_POSIX"]=" 1"
D["GNULIB_TEST_VFPRINTF_POSIX"]=" 1"
D["REPLACE_VPRINTF_POSIX"]=" 1"
D["GNULIB_TEST_VPRINTF_POSIX"]=" 1"
D["GNULIB_TEST_WCRTOMB"]=" 1"
D["GNULIB_TEST_WCSWIDTH"]=" 1"
D["HAVE_TOWLOWER"]=" 1"
D["HAVE_DECL_WCWIDTH"]=" 1"
D["GNULIB_TEST_WCWIDTH"]=" 1"
D["GWINSZ_IN_SYS_IOCTL"]=" 1"
D["GNULIB_TEST_WRITE"]=" 1"
D["GNULIB_XGETGROUPS"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["GNULIB_TEST_ACCEPT"]=" 1"
D["GNULIB_TEST_BIND"]=" 1"
D["GNULIB_TEST_CONNECT"]=" 1"
D["HAVE_DECL_INET_PTON"]=" 1"
D["HAVE_IOCTL"]=" 1"
D["GNULIB_TEST_IOCTL"]=" 1"
D["DBL_EXPBIT0_WORD"]=" 1"
D["DBL_EXPBIT0_BIT"]=" 20"
D["FLT_EXPBIT0_WORD"]=" 0"
D["FLT_EXPBIT0_BIT"]=" 23"
D["LDBL_EXPBIT0_WORD"]=" 2"
D["LDBL_EXPBIT0_BIT"]=" 0"
D["GNULIB_TEST_LISTEN"]=" 1"
D["HAVE_SETLOCALE"]=" 1"
D["HAVE_USELOCALE"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["GNULIB_TEST_PERROR"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["GNULIB_TEST_SETLOCALE"]=" 1"
D["GNULIB_TEST_SETSOCKOPT"]=" 1"
D["HAVE_DECL_SLEEP"]=" 1"
D["GNULIB_TEST_SLEEP"]=" 1"
D["GNULIB_TEST_SOCKET"]=" 1"
D["GNULIB_TEST_STRERROR_R"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["GNULIB_TEST_SYMLINKAT"]=" 1"
D["HAVE_PTHREAD_ATFORK"]=" 1"
D["UNLINK_CANNOT_UNLINK_DIR"]=" 1"
D["HAVE_DECL_WCTOB"]=" 1"
D["GNULIB_TEST_WCTOB"]=" 1"
D["GNULIB_TEST_WCTOMB"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["MAJOR_IN_SYSMACROS"]=" 1"
D["TIME_WITH_SYS_TIME"]=" 1"
D["HAVE_DECL_GETEUID"]=" 1"
D["HAVE_DECL_GETLOGIN"]=" 1"
D["HAVE_DECL_GETUID"]=" 1"
D["HAVE_DECL_GETGRGID"]=" 1"
D["HAVE_DECL_GETPWUID"]=" 1"
D["HAVE_DECL_TTYNAME"]=" 1"
D["HAVE_DECL_SETREGID"]=" 1"
D["PREFER_NONREENTRANT_EUIDACCESS"]=" 1"
D["HAVE_ATTR_ERROR_CONTEXT_H"]=" 1"
D["HAVE_ATTR_LIBATTR_H"]=" 1"
D["HAVE_ATTR_COPY_FILE"]=" 1"
D["USE_XATTR"]=" 1"
D["major_t"]=" unsigned int"
D["minor_t"]=" unsigned int"
D["ARGMATCH_DIE"]=" usage (EXIT_FAILURE)"
D["ARGMATCH_DIE_DECL"]=" void usage (int _e)"
D["HAVE_INOTIFY_INIT"]=" 1"
D["HAVE_INOTIFY"]=" 1"
D["HAVE_STRUCT_STATFS_F_NAMELEN"]=" 1"
D["HAVE_STRUCT_STATFS_F_TYPE"]=" 1"
D["HAVE_STRUCT_STATFS_F_FRSIZE"]=" 1"
D["HAVE_FDATASYNC"]=" 1"
D["HAVE_CAP"]=" 1"
D["HAVE_FORK"]=" 1"
D["HAVE_VFORK"]=" 1"
D["HAVE_WORKING_VFORK"]=" 1"
D["HAVE_WORKING_FORK"]=" 1"
D["HAVE_CHROOT"]=" 1"
D["HAVE_GETHOSTID"]=" 1"
D["HAVE_INITGROUPS"]=" 1"
D["HAVE_SYSLOG"]=" 1"
D["HAVE_UT_HOST"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["GWINSZ_IN_SYS_IOCTL"]=" 1"
D["HAVE_C_LINE"]=" 1"
D["HAVE_DECL_STRSIGNAL"]=" 1"
D["HAVE_DECL_SYS_SIGLIST"]=" 1"
D["HAVE_DECL__SYS_SIGLIST"]=" 1"
D["HAVE_DECL___SYS_SIGLIST"]=" 0"
D["ENABLE_NLS"]=" 1"
D["HAVE_GETTEXT"]=" 1"
D["HAVE_DCGETTEXT"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
$as_echo "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;
  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "$am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "po-directories":C)
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          gt_tab=`printf '\t'`
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            # Hide the ALL_LINGUAS assignment from automake < 1.5.
            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            # Hide the ALL_LINGUAS assignment from automake < 1.5.
            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done ;;

  esac
done # for ac_tag


as_fn_exit 0
